<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Maui</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Maui.Animations.Animation">
            <summary>
            Represents an animation.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.#ctor">
            <summary>
            Instantiate a new <see cref="T:Microsoft.Maui.Animations.Animation"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.#ctor(System.Action{System.Double},System.Double,System.Double,Microsoft.Maui.Easing,System.Action)">
            <summary>
            Instantiate a new <see cref="T:Microsoft.Maui.Animations.Animation"/> object with the given parameters.
            </summary>
            <param name="callback">The <see cref="T:System.Action`1"/> that is invoked after each tick of this animation.</param>
            <param name="start">Specifies a delay (in seconds) taken into account before the animation starts.</param>
            <param name="duration">Specifies the duration that this animation should take in seconds.</param>
            <param name="easing">The easing function to apply to this animation.</param>
            <param name="finished">A callback <see cref="T:System.Action`1"/> that is invoked after the animation has finished.</param>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.#ctor(System.Collections.Generic.List{Microsoft.Maui.Animations.Animation})">
            <summary>
            Instantiate a new <see cref="T:Microsoft.Maui.Animations.Animation"/> object that consists of the given list of child animations.
            </summary>
            <param name="animations">A <see cref="T:System.Collections.Generic.List`1"/> that contains <see cref="T:Microsoft.Maui.Animations.Animation"/> objects that will be children of the newly instantiated animation.</param>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.Finished">
            <summary>
            A callback that is invoked when this animation finishes.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.Step">
            <summary>
            A callback that is invoked after each tick of this animation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.IsPaused">
            <summary>
            Specifies whether this animation is currently paused.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Animations.Animation.childrenAnimations">
            <summary>
            Collection of child animations associated to this animation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.Name">
            <summary>
            The name of this animation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.StartDelay">
            <summary>
            The delay (in seconds) taken into account before the animation starts.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.Duration">
            <summary>
            The duration of this animation in seconds.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.CurrentTime">
            <summary>
            The current timestamp (in seconds) of the animation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.Progress">
            <summary>
            Progress of this animation in percentage.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.Easing">
            <summary>
            The <see cref="P:Microsoft.Maui.Animations.Animation.Easing"/> function that is applied to this animation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.HasFinished">
            <summary>
            Specifies whether this animation has finished.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.Repeats">
            <summary>
            Specifies whether this animation should repeat.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.GetEnumerator">
            <summary>
            Provides an <see cref="T:System.Collections.IEnumerator"/> of the child animations.
            </summary>
            <returns><see cref="T:System.Collections.IEnumerator"/> of <see cref="T:Microsoft.Maui.Animations.Animation"/></returns>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.Add(System.Double,System.Double,Microsoft.Maui.Animations.Animation)">
            <summary>
            Adds a new child animation to this animation with the specified parameters.
            </summary>
            <param name="beginAt">Specifies a delay (in seconds) taken into account before the added child animation starts.</param>
            <param name="duration">Specifies the duration (in seconds) that the added child animation should take.</param>
            <param name="animation">The <see cref="T:Microsoft.Maui.Animations.Animation"/> object to add to this animation as a child.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="beginAt"/> or <paramref name="duration"/> is less than 0 or more than 1.</exception>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="duration"/> is less than or equal to <paramref name="beginAt"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.Tick(System.Double)">
            <summary>
            Method to trigger an update for this animation.
            </summary>
            <param name="milliseconds">Number of milliseconds that have passed since the last tick.</param>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.AnimationManager">
            <summary>
            A reference to the <see cref="T:Microsoft.Maui.Animations.IAnimationManager"/> that manages this animation.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Animations.Animation.animationManger">
            <summary>
            A reference to the <see cref="T:Microsoft.Maui.Animations.IAnimationManager"/> that manages this animation.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.OnTick(System.Double)">
            <summary>
            Executes the logic to update all animations within this animation.
            </summary>
            <param name="millisecondsSinceLastUpdate">Number of milliseconds that have passed since the last tick.</param>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.Update(System.Double)">
            <summary>
            Updates this animation by updating <see cref="P:Microsoft.Maui.Animations.Animation.Progress"/> and invoking <see cref="P:Microsoft.Maui.Animations.Animation.Step"/>.
            </summary>
            <param name="percent">Progress of this animation in percentage.</param>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.Commit(Microsoft.Maui.Animations.IAnimationManager)">
            <summary>
            Sets the <see cref="T:Microsoft.Maui.Animations.IAnimationManager"/> for this animation.
            </summary>
            <param name="animationManger">Reference to the <see cref="T:Microsoft.Maui.Animations.IAnimationManager"/> that will manage this animation.</param>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.CreateAutoReversing">
            <summary>
            Creates an animation that includes both the original animation and a reversed version of the same animation.
            </summary>
            <returns>An <see cref="T:Microsoft.Maui.Animations.Animation"/> object with the original animation and the reversed animation.</returns>
            <remarks>You can get just the reversed animation by using <see cref="M:Microsoft.Maui.Animations.Animation.CreateReverse"/>.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.CreateReverse">
            <summary>
            Creates a reversed version of the current animation, including reversing the child animations.
            </summary>
            <returns>An <see cref="T:Microsoft.Maui.Animations.Animation"/> object that is the reversed version of this animation.</returns>
            <remarks>You can the forward and reverse animation by using <see cref="M:Microsoft.Maui.Animations.Animation.CreateAutoReversing"/>.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.Reset">
            <summary>
            Resets the animation (and all child animations) to its initial state.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.Pause">
            <summary>
            Pauses the animation.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.Resume">
            <summary>
            Resumes the animation.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.RemoveFromParent">
            <summary>
            Removes this animation from it's parent.
            If there is no parent, nothing will happen.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.Animation.IsDisposed">
            <summary>
            Gets a value that specifies if this animation has been disposed.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.Animation.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Animations.AnimationManager">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Animations.AnimationManager.#ctor(Microsoft.Maui.Animations.ITicker)">
            <summary>
            Instantiate a new <see cref="T:Microsoft.Maui.Animations.AnimationManager"/> object.
            </summary>
            <param name="ticker">An instance of <see cref="T:Microsoft.Maui.Animations.ITicker"/> that will be used to time the animations.</param>
        </member>
        <member name="P:Microsoft.Maui.Animations.AnimationManager.Ticker">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Animations.AnimationManager.SpeedModifier">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Animations.AnimationManager.AutoStartTicker">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Animations.AnimationManager.Add(Microsoft.Maui.Animations.Animation)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Animations.AnimationManager.Remove(Microsoft.Maui.Animations.Animation)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Animations.AnimationManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Animations.IAnimationManager">
            <summary>
            This class is responsible for controlling the animations in .NET MAUI.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.IAnimationManager.Ticker">
            <summary>
            The ticker that is used by this manager to time the animations.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.IAnimationManager.SpeedModifier">
            <summary>
            Specifies a factor with which the animations for this manager should be multiplied.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.IAnimationManager.AutoStartTicker">
            <summary>
            Specifies whether or not to automatically start the animation ticker for this manager.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.IAnimationManager.Add(Microsoft.Maui.Animations.Animation)">
            <summary>
            Adds the given animation to this manager. 
            </summary>
            <param name="animation">The animation to be added.</param>
        </member>
        <member name="M:Microsoft.Maui.Animations.IAnimationManager.Remove(Microsoft.Maui.Animations.Animation)">
            <summary>
            Removes the given animation from this manager. 
            </summary>
            <param name="animation">The animation to be removed.</param>
        </member>
        <member name="T:Microsoft.Maui.Animations.IAnimator">
            <summary>
            Objects implementing the <see cref="T:Microsoft.Maui.Animations.IAnimator"/> interface can act as parent objects for <see cref="T:Microsoft.Maui.Animations.Animation"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.IAnimator.AddAnimation(Microsoft.Maui.Animations.Animation)">
            <summary>
            Add an <see cref="T:Microsoft.Maui.Animations.Animation"/> object to this element.
            </summary>
            <param name="animation">The animation to be added.</param>
        </member>
        <member name="M:Microsoft.Maui.Animations.IAnimator.RemoveAnimation(Microsoft.Maui.Animations.Animation)">
            <summary>
            Removes an <see cref="T:Microsoft.Maui.Animations.Animation"/> object from this element.
            </summary>
            <param name="animation">The animation to be removed.</param>
        </member>
        <member name="T:Microsoft.Maui.Animations.ITicker">
            <summary>
            A ticker makes sure that animations get triggered to advance and progress through their different stages.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.ITicker.IsRunning">
            <summary>
            Specifies whether this ticker is currently running.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.ITicker.SystemEnabled">
            <summary>
            Specifies whether this ticker is system enabled.
            </summary>
            <remarks>If <see langword="false"/>, it might be disabled by the device energy savings for instance.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Animations.ITicker.MaxFps">
            <summary>
            Maximum frames per second this ticker can handle.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.ITicker.Fire">
            <summary>
            The <see cref="T:System.Action"/> that is triggered when this ticker interval has been reached.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.ITicker.Start">
            <summary>
            Starts running this ticker.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.ITicker.Stop">
            <summary>
            Stops this ticker from running.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Animations.LerpingAnimation">
            <summary>
            Represents a linear interpolation animation.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.LerpingAnimation.#ctor">
            <summary>
            Instantiate a new <see cref="T:Microsoft.Maui.Animations.LerpingAnimation"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.LerpingAnimation.#ctor(System.Action{System.Double},System.Double,System.Double,Microsoft.Maui.Easing,System.Action)">
            <summary>
            Instantiate a new <see cref="T:Microsoft.Maui.Animations.LerpingAnimation"/> object with the given parameters.
            </summary>
            <param name="callback">The <see cref="T:System.Action`1"/> that is invoked after each tick of this animation.</param>
            <param name="start">Specifies a delay (in seconds) taken into account before the animation starts.</param>
            <param name="end">Specifies the duration that this animation should take in seconds.</param>
            <param name="easing">The easing function to apply to this animation.</param>
            <param name="finished">A callback <see cref="T:System.Action`1"/> that is invoked after the animation has finished.</param>
        </member>
        <member name="M:Microsoft.Maui.Animations.LerpingAnimation.#ctor(System.Collections.Generic.List{Microsoft.Maui.Animations.Animation})">
            <summary>
            Instantiate a new <see cref="T:Microsoft.Maui.Animations.LerpingAnimation"/> that consists of the given list of child animations.
            </summary>
            <param name="animations">A <see cref="T:System.Collections.Generic.List`1"/> that contains <see cref="T:Microsoft.Maui.Animations.Animation"/> objects that will be children of the newly instantiated animation.</param>
        </member>
        <member name="P:Microsoft.Maui.Animations.LerpingAnimation.ValueChanged">
            <summary>
            Gets or sets a callback that is invoked when <see cref="P:Microsoft.Maui.Animations.LerpingAnimation.CurrentValue"/> is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.LerpingAnimation.StartValue">
            <summary>
            Gets or sets the start value of this animation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.LerpingAnimation.EndValue">
            <summary>
            Gets or sets the end value of this animation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.LerpingAnimation.CurrentValue">
            <summary>
            Gets the current value for this animation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Animations.LerpingAnimation.Lerp">
            <summary>
            Gets or sets the linear interpolation for this animation.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Animations.LerpingAnimation.Update(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Animations.PlatformTicker">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Animations.Ticker">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Animations.Ticker.MaxFps">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Animations.Ticker.Fire">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Animations.Ticker.IsRunning">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Animations.Ticker.SystemEnabled">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Animations.Ticker.Start">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Animations.Ticker.Stop">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Easing">
            <summary>
            Functions that modify values non-linearly, generally used for animations.
            </summary>
            <remarks>
            Easing functions are applied to input values in the range [0,1]. The cubic easing functions are often considered to look most natural.
            If developers wish to use their own easing functions, they should return a value of 0 for an input of 0 and a value of 1 for an input of 1 or the animation will have a jump.
            </remarks>
        </member>
        <member name="P:Microsoft.Maui.Easing.Default">
            <summary>
            The default easing function that is used.
            Defaults to <see cref="F:Microsoft.Maui.Easing.CubicInOut"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.Linear">
            <summary>
            Linear transformation.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.SinOut">
            <summary>
            Smoothly decelerates.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.SinIn">
            <summary>
            Smoothly accelerates.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.SinInOut">
            <summary>
            Accelerates in and decelerates out.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.CubicIn">
            <summary>
            Starts slowly and accelerates.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.CubicOut">
            <summary>
            Starts quickly and the decelerates.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.CubicInOut">
            <summary>
            Accelerates and decelerates. Often a natural-looking choice.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.BounceOut">
            <summary>
            Leaps to final values, bounces 3 times, and settles.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.BounceIn">
            <summary>
            Jumps towards, and then bounces as it settles at the final value.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.SpringIn">
            <summary>
            Moves away and then leaps toward the final value.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Easing.SpringOut">
            <summary>
            Overshoots and then returns.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Easing.#ctor(System.Func{System.Double,System.Double})">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.Easing" /> object with the <paramref name="easingFunc" /> function.
            </summary>
            <param name="easingFunc">A function that maps animation times.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="easingFunc"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.Easing.Ease(System.Double)">
            <summary>
            Applies the easing function to the specified value <paramref name="v" />.
            </summary>
            <param name="v">A value in the range [0,1] to which the easing function should be applied.</param>
            <returns>The value of the easing function when applied to the value <paramref name="v" />.</returns>
        </member>
        <member name="M:Microsoft.Maui.Easing.op_Implicit(System.Func{System.Double,System.Double})~Microsoft.Maui.Easing">
            <summary>
            Converts a function into an <see cref="T:Microsoft.Maui.Easing" />.
            </summary>
            <param name="func">An easing function.</param>
            <remarks>An easing function should return a value of (or near) 0 at 0 and 1 (or near) for 1.</remarks>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.ModifyMapping``2(Microsoft.Maui.CommandMapper{``0,``1},System.String,System.Action{``1,``0,System.Object,System.Action{Microsoft.Maui.IElementHandler,Microsoft.Maui.IElement,System.Object}})">
            <summary>
            Modify a command mapping in place.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The modified method to call when the command is updated.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.ModifyMapping``2(Microsoft.Maui.ICommandMapper{``0,``1},System.String,System.Action{``1,``0,System.Object,System.Action{Microsoft.Maui.IElementHandler,Microsoft.Maui.IElement,System.Object}})">
            <summary>
            Modify a command mapping in place.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The modified method to call when the command is updated.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.ModifyMapping``2(Microsoft.Maui.ICommandMapper{Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler},System.String,System.Action{``1,``0,System.Object,System.Action{Microsoft.Maui.IElementHandler,Microsoft.Maui.IElement,System.Object}})">
            <summary>
            Modify a command mapping in place but call the previous mapping if the types do not match.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The modified method to call when the command is updated.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.ReplaceMapping``2(Microsoft.Maui.ICommandMapper{Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler},System.String,System.Action{``1,``0,System.Object})">
            <summary>
            Replace a command mapping in place but call the previous mapping if the types do not match.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The modified method to call when the command is updated.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.AppendToMapping``2(Microsoft.Maui.CommandMapper{``0,``1},System.String,System.Action{``1,``0,System.Object})">
            <summary>
            Specify a method to be run after an existing command mapping.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The method to call after the existing mapping is finished.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.AppendToMapping``2(Microsoft.Maui.ICommandMapper{``0,``1},System.String,System.Action{``1,``0,System.Object})">
            <summary>
            Specify a method to be run after an existing command mapping.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The method to call after the existing mapping is finished.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.AppendToMapping``2(Microsoft.Maui.ICommandMapper{Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler},System.String,System.Action{``1,``0,System.Object})">
            <summary>
            Specify a method to be run after an existing command mapping but skip if the types do not match.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The method to call after the existing mapping is finished.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.PrependToMapping``2(Microsoft.Maui.CommandMapper{``0,``1},System.String,System.Action{``1,``0,System.Object})">
            <summary>
            Specify a method to be run before an existing command mapping.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The method to call before the existing mapping begins.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.PrependToMapping``2(Microsoft.Maui.ICommandMapper{``0,``1},System.String,System.Action{``1,``0,System.Object})">
            <summary>
            Specify a method to be run before an existing command mapping.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The method to call before the existing mapping begins.</param>
        </member>
        <member name="M:Microsoft.Maui.CommandMapperExtensions.PrependToMapping``2(Microsoft.Maui.ICommandMapper{Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler},System.String,System.Action{``1,``0,System.Object})">
            <summary>
            Specify a method to be run before an existing command mapping but skip if the types do not match.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="commandMapper">The command mapper in which to change the mapping.</param>
            <param name="key">The name of the command.</param>
            <param name="method">The method to call before the existing mapping begins.</param>
        </member>
        <member name="T:Microsoft.Maui.Converters.CornerRadiusTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.EasingTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.FlexJustifyTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.FlexDirectionTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.FlexAlignContentTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.FlexAlignItemsTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.FlexAlignSelfTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.FlexWrapTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.FlexBasisTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.KeyboardTypeConverter">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Converters.ThicknessTypeConverter">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualTreeElementExtensions.GetVisualElementWindow(Microsoft.Maui.IVisualTreeElement)">
            <summary>
            Gets the Window containing the Visual Tree Element, if the element is contained within one.
            </summary>
            <param name="element"><see cref="T:Microsoft.Maui.IVisualTreeElement"/>.</param>
            <returns><see cref="T:Microsoft.Maui.IWindow"/> if element is contained within a Window, else returns null.</returns>
        </member>
        <member name="M:Microsoft.Maui.VisualTreeElementExtensions.GetVisualTreeDescendants(Microsoft.Maui.IVisualTreeElement)">
            <summary>
            Gets the entire hierarchy of descendants as a list of children for a given Visual Tree Element.
            </summary>
            <param name="visualElement"><see cref="T:Microsoft.Maui.IVisualTreeElement"/> to scan.</param>
            <returns>List of Children Elements.</returns>
        </member>
        <member name="M:Microsoft.Maui.VisualTreeElementExtensions.GetVisualTreeElements(Microsoft.Maui.IVisualTreeElement,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Gets list of a Visual Tree Elements children based off of a rectangle defined by its coordinates which are specified in platform units, not pixels.
            </summary>
            <param name="visualElement"><see cref="T:Microsoft.Maui.IVisualTreeElement"/> to scan.</param>
            <param name="x1">The X coordinate of the top left point.</param>
            <param name="y1">The Y coordinate of the top left point.</param>
            <param name="x2">The X coordinate of the bottom right point.</param>
            <param name="y2">The Y coordinate of the bottom right point.</param>
            <returns>List of Children Elements.</returns>
        </member>
        <member name="M:Microsoft.Maui.VisualTreeElementExtensions.GetVisualTreeElements(Microsoft.Maui.IVisualTreeElement,Microsoft.Maui.Graphics.Rect)">
            <summary>
            Gets list of a Visual Tree Elements children based off of a rectangle.
            </summary>
            <param name="visualElement"><see cref="T:Microsoft.Maui.IVisualTreeElement"/> to scan.</param>
            <param name="rectangle">The rectangle.</param>
            <returns>List of Children Elements.</returns>
        </member>
        <member name="M:Microsoft.Maui.VisualTreeElementExtensions.GetVisualTreeElements(Microsoft.Maui.IVisualTreeElement,System.Double,System.Double)">
            <summary>
            Gets list of a Visual Tree Elements children based off of a given x, y point.
            </summary>
            <param name="visualElement"><see cref="T:Microsoft.Maui.IVisualTreeElement"/> to scan.</param>
            <param name="x">The X point.</param>
            <param name="y">The Y point.</param>
            <returns>List of Children Elements.</returns>
        </member>
        <member name="M:Microsoft.Maui.VisualTreeElementExtensions.GetVisualTreeElements(Microsoft.Maui.IVisualTreeElement,Microsoft.Maui.Graphics.Point)">
            <summary>
            Gets list of a Visual Tree Element's children based off of a given Point.
            </summary>
            <param name="visualElement"><see cref="T:Microsoft.Maui.IVisualTreeElement"/> to scan.</param>
            <param name="point"><see cref="T:Microsoft.Maui.Graphics.Point"/>.</param>
            <returns>List of Children Elements.</returns>
        </member>
        <member name="M:Microsoft.Maui.VisualTreeElementExtensions.GetVisualTreeElement(System.Object)">
            <summary>
            Locates the <see cref="T:Microsoft.Maui.IVisualTreeElement"/> that's a best fit for the given platform view.		 
            </summary>
            <remarks>
            If an exact <see cref="T:Microsoft.Maui.IVisualTreeElement"/> counterpart isn't found, then the
            first <see cref="T:Microsoft.Maui.IVisualTreeElement"/> within the ancestors of the given platform view will 
            be returned. 
            </remarks>
            <param name="platformView">The platform view.</param>
            <returns>
            A visual tree element if found, <see langword="null"/> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.Maui.VisualTreeElementExtensions.GetVisualTreeElement(System.Object,System.Boolean)">
            <summary>
            Locates the <see cref="T:Microsoft.Maui.IVisualTreeElement"/> that's a best fit for the given platform view.		 
            </summary>
            <remarks>
            If an exact <see cref="T:Microsoft.Maui.IVisualTreeElement"/> counterpart isn't found, then the
            first <see cref="T:Microsoft.Maui.IVisualTreeElement"/> within the ancestors of the given platform view will 
            be returned. 
            </remarks>
            <param name="platformView">The platform view.</param>
            <param name="searchAncestors">
            <see langword="true"/> to search within the ancestors of the given platform view;  
            otherwise, <see langword="false"/>.</param>
            <returns>
            A visual tree element if found, <see langword="null"/> otherwise.
            </returns>
        </member>
        <member name="T:Microsoft.Maui.IAbsoluteLayout">
            <summary>
            A Layout used to position and size children using explicit values.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IAbsoluteLayout.GetLayoutBounds(Microsoft.Maui.IView)">
            <summary>
            Gets the layout bounds of an IView.
            </summary>
            <param name="view">A visual element.</param>
            <returns>The layout bounds of the object.</returns>
        </member>
        <member name="M:Microsoft.Maui.IAbsoluteLayout.GetLayoutFlags(Microsoft.Maui.IView)">
            <summary>
            Gets the layout flags of the IView in the IAbsoluteLayout.
            </summary>
            <param name="view">A visual element.</param>
            <returns>The layout flags of the object.</returns>
        </member>
        <member name="T:Microsoft.Maui.IActivityIndicator">
            <summary>
            Represents a View that displays an animation to show that the application is engaged
            in a lengthy activity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IActivityIndicator.IsRunning">
            <summary>
            Gets a value that indicates whether the ActivityIndicator should be visible and animating,
            or hidden.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IActivityIndicator.Color">
            <summary>
            Gets a Color value that defines the display color.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IAdorner">
            <summary>
            Represents an adorner around a view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IAdorner.Density">
            <summary>
            Gets the Density for the Adorner.
            Used to override the default density behavior for the containing border. 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IAdorner.VisualView">
            <summary>
            Gets the underlying <see cref="T:Microsoft.Maui.IView"/> that makes up the border.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IApplication">
            <summary>
            Class that represents a cross-platform .NET MAUI application.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IApplication.Windows">
            <summary>
            Gets the instantiated windows in an application.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IApplication.CreateWindow(Microsoft.Maui.IActivationState)">
            <summary>
            Instantiate a new window.
            </summary>
            <param name="activationState">Argument containing specific information on each platform.</param>
            <returns>The created window.</returns>
        </member>
        <member name="M:Microsoft.Maui.IApplication.OpenWindow(Microsoft.Maui.IWindow)">
            <summary>
            Requests that the application open a new window.
            </summary>
            <param name="window">The window to open.</param>
        </member>
        <member name="M:Microsoft.Maui.IApplication.CloseWindow(Microsoft.Maui.IWindow)">
            <summary>
            Requests that the application closes the window.
            </summary>
            <param name="window">The window to close.</param>
        </member>
        <member name="P:Microsoft.Maui.IApplication.UserAppTheme">
            <summary>
            Gets the current requested theme by the system for your application. 
            The return value will be one of the following:
            - Unspecified
            - Light
            - Dark
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IApplication.ThemeChanged">
            <summary>
            Notify a theme change.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IBorder">
            <summary>
            Provides functionality to provide a border.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IBorder.Border">
            <summary>
             Define how the Shape outline is painted.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IBorderStroke">
            <summary>
            Define how the Shape outline is painted on Layouts.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IBorderStroke.Shape">
            <summary>
            Defines the shape of the border.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IBorderView">
            <summary>
            Provides functionality to define a border around an element.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IButton">
            <summary>
            Represents a <see cref="T:Microsoft.Maui.IView"/> that reacts to touch events.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IButton.Pressed">
            <summary>
            Occurs when the button is pressed.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IButton.Released">
            <summary>
            Occurs when the button is released.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IButton.Clicked">
            <summary>
            Occurs when the button is clicked/tapped.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IButtonStroke">
            <summary>
            Provides functionality to be able to customize a Button border.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IButtonStroke.StrokeColor">
            <summary>
            Gets a color that describes the border stroke color of the button.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IButtonStroke.StrokeThickness">
            <summary>
            Gets or sets the width of the border.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IButtonStroke.CornerRadius">
            <summary>
            Gets the corner radius for the button, in device-independent units.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ICheckBox">
            <summary>
            Represents a View which allows the user to select a binary choice.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ICheckBox.IsChecked">
            <summary>
            Gets a value that indicates whether the CheckBox is checked.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ICheckBox.Foreground">
            <summary>
            Gets the CheckBox Foreground Paint.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IContainer">
            <summary>
            Provides functionality to act as containers for views. 
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IContentView">
            <summary>
            A View that contains another View.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IContentView.Content">
            <summary>
            Gets the raw content of this view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IContentView.PresentedContent">
            <summary>
            Gets the content of this view as it will be rendered in the user interface, including any transformations or applied templates.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IContentView.CrossPlatformMeasure(System.Double,System.Double)">
            <summary>
            This interface method is provided for backward compatibility with previous versions. 
            Implementing classes should implement the ICrossPlatformLayout interface rather than directly implementing this method.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IContentView.CrossPlatformArrange(Microsoft.Maui.Graphics.Rect)">
            <summary>
            This interface method is provided for backward compatibility with previous versions. 
            Implementing classes should implement the ICrossPlatformLayout interface rather than directly implementing this method.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IContextFlyoutElement">
            <summary>
            Represents a view that can contain a context flyout menu, which is usually represented as a right-click menu.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IContextFlyoutElement.ContextFlyout">
            <summary>
            Gets the <see cref="P:Microsoft.Maui.IContextFlyoutElement.ContextFlyout"/> for the view. Menu flyouts, menu flyout subitems, and menu flyout separators can be added to the context flyout.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ICrossPlatformLayout.CrossPlatformMeasure(System.Double,System.Double)">
            <summary>
            Measures the desired size of the ICrossPlatformLayout within the given constraints.
            </summary>
            <param name="widthConstraint">The width limit for measuring the ICrossPlatformLayout.</param>
            <param name="heightConstraint">The height limit for measuring the ICrossPlatformLayout.</param>
            <returns>The desired size of the ILayout.</returns>
        </member>
        <member name="M:Microsoft.Maui.ICrossPlatformLayout.CrossPlatformArrange(Microsoft.Maui.Graphics.Rect)">
            <summary>
            Arranges the children of the ICrossPlatformLayout within the given bounds.
            </summary>
            <param name="bounds">The bounds in which the ICrossPlatformLayout's children should be arranged.</param>
            <returns>The actual size of the arranged ICrossPlatformLayout.</returns>
        </member>
        <member name="T:Microsoft.Maui.ICrossPlatformLayoutBacking">
            <summary>
            Indicates a control which supports cross-platform layout operations
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ICrossPlatformLayoutBacking.CrossPlatformLayout">
            <summary>
            Gets or sets the implementation of cross-platform layout operations to be carried out by this control
            </summary>
            <remarks>
            This property is the bridge between the platform-level backing control and the cross-platform-level
            layout. It is typically connected by the handler, which may add additional logic to normalize layout
            and content behaviors across the various platforms. 
            </remarks>
        </member>
        <member name="T:Microsoft.Maui.IDatePicker">
            <summary>
            Represents a View that allows the user to select a date.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IDatePicker.Format">
            <summary>
            Gets the format of the date to display to the user. 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IDatePicker.Date">
            <summary>
            Gets the displayed date.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IDatePicker.MinimumDate">
            <summary>
            Gets the minimum DateTime selectable.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IDatePicker.MaximumDate">
            <summary>
            Gets the maximum DateTime selectable.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IEditor">
            <summary>
            Represents a View used to accept multi-line input.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IEditor.Completed">
            <summary>
            Occurs when the user finalizes the text in an editor with the return key.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IElement.Handler">
            <summary>
            Gets or sets the View Handler of the Element.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IElement.Parent">
            <summary>
            Gets the Parent of the Element.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IEntry">
            <summary>
            Represents a <see cref="T:Microsoft.Maui.IView"/> that is used for single-line text input.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IEntry.IsPassword">
            <summary>
            Gets a value that indicates if the entry should visually obscure typed text.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IEntry.ReturnType">
            <summary>
            Gets an enumeration value that controls the appearance of the return button.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IEntry.ClearButtonVisibility">
            <summary>
            Gets an enumeration value that shows/hides clear button on the Entry.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IEntry.Completed">
            <summary>
            Occurs when the user finalizes the text in an entry with the return key.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IFlexLayout">
            <summary>
            A Flexbox-like layout that lays out child elements in optionally wrappable rows or columns of 
            child elements.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlexLayout.Direction">
            <summary>
            Gets the flex direction for child elements within this layout.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlexLayout.JustifyContent">
            <summary>
            Gets a value that that describes how child elements are justified when there is extra space around them.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlexLayout.AlignContent">
            <summary>
            Gets a value that controls how multiple rows or columns of child elements are aligned.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlexLayout.AlignItems">
            <summary>
            Gets a value that controls how child elements are laid out within their row or column.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlexLayout.Position">
            <summary>
            Gets a value that controls whether the coordinates of child elements are specified in absolute or relative terms.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlexLayout.Wrap">
            <summary>
            Gets a value that controls whether and how child elements within this layout wrap.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IFlexLayout.GetOrder(Microsoft.Maui.IView)">
            <summary>
            Returns the visual order of the element among its siblings.
            </summary>
            <param name="view">The view for which to retrieve the property value.</param>
            <returns>The visual order of the element among its siblings.</returns>
        </member>
        <member name="M:Microsoft.Maui.IFlexLayout.GetGrow(Microsoft.Maui.IView)">
            <summary>
            Returns the value that determines the proportional growth that this element will accept to accommodate 
            the layout in the row or column.
            </summary>
            <param name="view">The view for which to retrieve the property value.</param>
            <returns>The value that determines the proportional growth that this element will accept to  the layout in the row or column.</returns>
        </member>
        <member name="M:Microsoft.Maui.IFlexLayout.GetShrink(Microsoft.Maui.IView)">
            <summary>
            Returns the value that determines the proportional reduction in size that this element will accept to  the layout in the row or column.
            </summary>
            <param name="view">The view for which to retrieve the property value.</param>
            <returns>The proportional reduction in size that this element will accept to  the layout in the row or column.</returns>
        </member>
        <member name="M:Microsoft.Maui.IFlexLayout.GetAlignSelf(Microsoft.Maui.IView)">
            <summary>
            Returns the value that optionally overrides the item alignment for this child within its row or column in the parent.
            </summary>
            <param name="view">The view for which to retrieve the property value</param>
            <returns>The value that optionally overrides the item alignment for this child within its row or column in the parent.</returns>
        </member>
        <member name="M:Microsoft.Maui.IFlexLayout.GetBasis(Microsoft.Maui.IView)">
            <summary>
            Returns the value that describes this element's relative or absolute basis length.
            </summary>
            <param name="view">The view for which to retrieve the property value.</param>
            <returns>The value that describes this element's relative or absolute basis length.</returns>
        </member>
        <member name="T:Microsoft.Maui.IFlyoutView">
            <summary>
            Represents a Page that manages two panes of information: A master page that presents data at a high level, 
            and a detail page that displays low-level details about information in the master.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlyoutView.Flyout">
            <summary>
            Gets the flyout view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlyoutView.Detail">
            <summary>
            Gets the detail view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlyoutView.IsPresented">
            <summary>
             Gets a value that indicates if the flyout is presented.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlyoutView.FlyoutBehavior">
            <summary>
            Gets a value that indicates how detail content is displayed.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlyoutView.FlyoutWidth">
            <summary>
             Gets the flyout view width.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFlyoutView.IsGestureEnabled">
            <summary>
             Gets a value that indicates if the swipe gesture is enabled.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IGraphicsView">
            <summary>
            Represents a view that can be drawn on using drawing commands.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IGraphicsView.Drawable">
            <summary>
            Define the drawing content.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IGraphicsView.Invalidate">
            <summary>
            Informs the canvas that it needs to redraw itself.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IGraphicsView.StartHoverInteraction(Microsoft.Maui.Graphics.PointF[])">
            <summary>
            Raised when a pointer enters the hit test area of the GraphicsView.
            </summary>
            <param name="points">The set of positions where there has been interaction.</param>
        </member>
        <member name="M:Microsoft.Maui.IGraphicsView.MoveHoverInteraction(Microsoft.Maui.Graphics.PointF[])">
            <summary>
            Raised when a pointer moves while the pointer remains within the hit test 
            area of the GraphicsView.
            </summary>
            <param name="points">The set of positions where there has been interaction.</param>
        </member>
        <member name="M:Microsoft.Maui.IGraphicsView.EndHoverInteraction">
            <summary>
            Raised when a pointer leaves the hit test area of the GraphicsView.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IGraphicsView.StartInteraction(Microsoft.Maui.Graphics.PointF[])">
            <summary>
            Raised when the GraphicsView is pressed.
            </summary>
            <param name="points">The set of positions where there has been interaction.</param>
        </member>
        <member name="M:Microsoft.Maui.IGraphicsView.DragInteraction(Microsoft.Maui.Graphics.PointF[])">
            <summary>
            Raised when the GraphicsView is dragged.
            </summary>
            <param name="points">The set of positions where there has been interaction.</param>
        </member>
        <member name="M:Microsoft.Maui.IGraphicsView.EndInteraction(Microsoft.Maui.Graphics.PointF[],System.Boolean)">
            <summary>
            Raised when the press that raised the StartInteraction event is released.
            </summary>
            <param name="points">The set of positions where there has been interaction.</param>
            <param name="isInsideBounds">a boolean that indicates if the interaction takes place within the bounds.</param>
        </member>
        <member name="M:Microsoft.Maui.IGraphicsView.CancelInteraction">
            <summary>
            Raised when the press that made contact with the GraphicsView loses contact.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IGridColumnDefinition">
            <summary>
            Provides the properties for a column in a GridLayout.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IGridColumnDefinition.Width">
            <summary>
            Gets the width of the column.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IGridLayout">
            <summary>
            Represents a layout that arranges views in rows and columns.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IGridLayout.RowDefinitions">
            <summary>
            An IGridRowDefinition collection for the GridLayout instance.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IGridLayout.ColumnDefinitions">
            <summary>
            An IGridColumnDefinition collection for the GridLayout instance.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IGridLayout.RowSpacing">
            <summary>
            Gets the amount of space left between rows in the GridLayout.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IGridLayout.ColumnSpacing">
            <summary>
            Gets the amount of space left between columns in the GridLayout.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IGridLayout.GetRow(Microsoft.Maui.IView)">
            <summary>
            Gets the row of the child element.
            </summary>
            <param name="view">A view that belongs to the Grid layout.</param>
            <returns>An integer that represents the row in which the item will appear.</returns>
        </member>
        <member name="M:Microsoft.Maui.IGridLayout.GetRowSpan(Microsoft.Maui.IView)">
            <summary>
            Gets the row span of the child element.
            </summary>
            <param name="view">A view that belongs to the Grid layout.</param>
            <returns>The row that the child element is in.</returns>
        </member>
        <member name="M:Microsoft.Maui.IGridLayout.GetColumn(Microsoft.Maui.IView)">
            <summary>
            Gets the column of the child element.
            </summary>
            <param name="view">A view that belongs to the Grid layout.</param>
            <returns>The column that the child element is in.</returns>
        </member>
        <member name="M:Microsoft.Maui.IGridLayout.GetColumnSpan(Microsoft.Maui.IView)">
            <summary>
            Gets the row span of the child element.
            </summary>
            <param name="view">A view that belongs to the Grid layout.</param>
            <returns>The row that the child element is in.</returns>
        </member>
        <member name="T:Microsoft.Maui.IGridRowDefinition">
            <summary>
            Provides the properties for a row in a GridLayout.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IGridRowDefinition.Height">
            <summary>
            Gets the height of the row.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IImage">
            <summary>
            Represents a View that holds an image.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IImage.Aspect">
            <summary>
            Gets the scaling mode for the image.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IImage.IsOpaque">
            <summary>
            Gets or sets a Boolean value that, if true hints to the rendering engine that it may safely omit drawing visual elements behind the image.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IImageButton">
            <summary>
            Represents a View that reacts to touch events.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IIndicatorView">
            <summary>
            A view that displays indicators that represent the number of items, and current position
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IIndicatorView.Count">
            <summary>
            The number of indicators
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IIndicatorView.Position">
            <summary>
            The currently selected indicator index
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IIndicatorView.IndicatorSize">
            <summary>
            Size of the indicators
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IIndicatorView.MaximumVisible">
            <summary>
            Maximum number of visible indicators
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IIndicatorView.HideSingle">
            <summary>
            Indicates whether the indicator should be hidden when only one exists.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IIndicatorView.IndicatorColor">
            <summary>
            Color of the indicators
            We only support SolidPaint color for now 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IIndicatorView.SelectedIndicatorColor">
            <summary>
            Color of the indicator that represents the currently selected index
            We only support SolidPaint color for now 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IIndicatorView.IndicatorsShape">
            <summary>
            Shape of platform indicators, can be Circle or Square
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITemplatedIndicatorView">
            <summary>
            A layout that displays indicators that represent the number of items using a DataTemplate for indicators
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITemplatedIndicatorView.IndicatorsLayoutOverride">
            <summary>
            The layout where to renderer the Template for the indicators
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IKeyboardAccelerator">
            <summary>
            Represents a shortcut key for a <see cref="T:Microsoft.Maui.Controls.MenuFlyoutItem" />.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IKeyboardAccelerator.Modifiers">
            <summary>
            Specifies the virtual key used to modify another keypress. 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IKeyboardAccelerator.Key">
            <summary>
            Specifies the values for the virtual key.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ILabel">
            <summary>
            Represents a View that displays text.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ILabel.TextDecorations">
            <summary>
            Gets the text decoration applied to the Label.
            Underline and strike-through text decorations can be applied.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ILabel.LineHeight">
            <summary>
            Gets the line height applied to the Label.
            Underline and strike-through text decorations can be applied.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ILayout">
            <summary>
            Provides the base properties and methods for all Layout elements.
            Use Layout elements to position and size child elements in .NET MAUI applications.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ILayout.ClipsToBounds">
            <summary>
            Specifies whether the ILayout clips its content to its boundaries.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ILayout.CrossPlatformArrange(Microsoft.Maui.Graphics.Rect)">
            <summary>
            This interface method is provided for backward compatibility with previous versions. 
            Implementing classes should implement the ICrossPlatformLayout interface rather than directly implementing this method.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ILayout.CrossPlatformMeasure(System.Double,System.Double)">
            <summary>
            This interface method is provided for backward compatibility with previous versions. 
            Implementing classes should implement the ICrossPlatformLayout interface rather than directly implementing this method.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IMenuBar">
            <summary>
            Represents a specialized container that presents a set of menus in a horizontal row, 
            typically at the top of an app window.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IMenuBar.IsEnabled">
            <summary>
            Gets a value indicating whether this View is enabled in the user interface. 
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IMenuBarItem">
            <summary>
            Represents a top-level menu in a MenuBar view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IMenuBarItem.IsEnabled">
            <summary>
            Gets a value indicating whether this View is enabled in the user interface. 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IMenuElement.IsEnabled">
            <summary>
            Gets a value indicating whether this View is enabled in the user interface. 
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IMenuElement.Clicked">
            <summary>
            Occurs when the IMenuElement is clicked.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IMenuFlyout">
            <summary>
            Represents a flyout that displays a menu of commands.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IMenuFlyoutItem">
            <summary>
            Represents a command in a MenuFlyout view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IMenuFlyoutItem.KeyboardAccelerators">
            <summary>
            Represents a shortcut key for a MenuItem.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IMenuFlyoutSeparator">
            <summary>
            Represents a horizontal line that separates items in a MenuFlyout.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IMenuFlyoutSubItem">
            <summary>
            Represents a menu item that displays a sub-menu in a MenuFlyout view.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IPadding">
            <summary>
            Provides functionality to be able to customize Padding.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPadding.Padding">
            <summary>
            The space between the outer edge of the control and its content.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IPicker">
            <summary>
            Represents a View for selecting a text item from a list of data.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPicker.Items">
            <summary>
            Gets the list of choices.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPicker.Title">
            <summary>
            Gets the title for the Picker.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPicker.TitleColor">
            <summary>
            Gets the color for the Picker title.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPicker.SelectedIndex">
            <summary>
            Gets the index of the selected item of the picker.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IPlaceholder">
            <summary>
            Provides functionality to be able to use a Placeholder.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPlaceholder.Placeholder">
            <summary>
            Gets the placeholder or hint text.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPlaceholder.PlaceholderColor">
            <summary>
            Gets or sets the placeholder text color.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IPlatformApplication">
            <summary>
            IPlatformApplication.
            Hosts the platform application.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPlatformApplication.Current">
            <summary>
            Gets the current IPlatformApplication.
            This must be set in each implementation manually, as we can't
            have a true static be used in the implementation.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPlatformApplication.Services">
            <summary>
            Gets the Service Provider.
            <see cref="T:System.IServiceProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IPlatformApplication.Application">
            <summary>
            Gets the Application.
            <see cref="T:Microsoft.Maui.IApplication"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IPlatformEventsListener">
            <summary>
            This lets us wire into areas of a control that are only reachable via
            overriding but we don't want to override those controls.
            TODO: Expose this as a more permanent solution or create a better one
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IProgress">
            <summary>
            Represents a View that show progress as a horizontal bar that is filled to a percentage 
            represented by a float value.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IProgress.Progress">
            <summary>
            Is a value that represents the current progress as a value from 0 to 1. 
            Progress values less than 0 will be clamped to 0, values greater than 1 will be clamped to 1.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IProgress.ProgressColor">
            <summary>
            Get the color of the progress bar.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IRadioButton">
            <summary>
            Represents a View that provides a toggled value.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IRadioButton.IsChecked">
            <summary>
            Gets or sets a Boolean value that indicates whether this RadioButton is checked.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IRange">
            <summary>
            Provides functionality to select a value from a range of values.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IRange.Minimum">
            <summary>
            Gets or sets the minimum selectable value.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IRange.Maximum">
            <summary>
            Gets or sets the maximum selectable value.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IRange.Value">
            <summary>
            Gets or sets the current value.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IRefreshView">
            <summary>
            Represents a container that provides pull to refresh functionality for scrollable content.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IRefreshView.IsRefreshing">
            <summary>
            Gets a bool that indicate if the View is loading or not.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IRefreshView.RefreshColor">
            <summary>
            Gets the loading indicator color.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IRefreshView.Content">
            <summary>
            The scrollable content to refresh.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ISafeAreaView">
            <summary>
            Provides functionality for requesting layout outside of the "safe" areas of the device screen.
            </summary>
            <remarks>
            This interface may be applied to any ILayout or IContentView.
            This interface is only recognized on the iOS/Mac Catalyst platforms; other platforms will ignore it.
            </remarks>
        </member>
        <member name="P:Microsoft.Maui.ISafeAreaView.IgnoreSafeArea">
            <summary>
            Specifies how the View's content should be positioned in relation to obstructions. If this value is `false`, the 
            content will be positioned only in the unobstructed portion of the screen. If this value is `true`, the content
            may be positioned anywhere on the screen. This includes the portion of the screen behind toolbars, screen cutouts, etc.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ISafeAreaView2">
            <summary>
            Provides functionality for the Page's SafeAreaInsets that may be changed in the future.
            </summary>
            <remarks>
            This interface is only recognized on the iOS/Mac Catalyst platforms; other platforms will ignore it.
            </remarks>
        </member>
        <member name="P:Microsoft.Maui.ISafeAreaView2.SafeAreaInsets">
            <summary>
            Internal property for the Page's SafeAreaInsets Thickness that may be changed in the future.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IScrollView.HorizontalScrollBarVisibility">
            <summary>
            Gets a value indicating the visibility rules for the horizontal scroll bar.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IScrollView.VerticalScrollBarVisibility">
            <summary>
            Gets a value indicating the visibility rules for the vertical scroll bar.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IScrollView.Orientation">
            <summary>
            Gets a value indicating the scroll orientation of the ScrollView.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IScrollView.ContentSize">
            <summary>
            Gets the size of the scrollable content in the ScrollView.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IScrollView.HorizontalOffset">
            <summary>
            Gets the current scroll position of the ScrollView along the horizontal axis.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IScrollView.VerticalOffset">
            <summary>
            Gets the current scroll position of the ScrollView along the vertical axis.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IScrollView.ScrollFinished">
            <summary>
            Allows the platform ScrollView to inform that cross-platform code that a scroll operation has completed.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IScrollView.RequestScrollTo(System.Double,System.Double,System.Boolean)">
            <summary>
            Scrolls to a specific offset.
            </summary>
            <param name="horizontalOffset">Represents the horizontal offset.</param>
            <param name="verticalOffset">Represents the vertical offset.</param>
            <param name="instant"></param>
        </member>
        <member name="T:Microsoft.Maui.ISearchBar">
            <summary>
            Represents a View used to initiating a search.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISearchBar.CancelButtonColor">
            <summary>
            Gets the color of the cancel button.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ISearchBar.SearchButtonPressed">
            <summary>
            Notify when the user presses the Search button.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IShadow">
            <summary>
            Represents a Shadow that can be applied to a View.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IShadow.Radius">
            <summary>
            The radius of the blur used to generate the shadow
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IShadow.Opacity">
            <summary>
            The opacity of the shadow.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IShadow.Paint">
            <summary>
            The Paint used to colorize the Shadow.
            At this time only SoliPaint works in all platforms
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IShadow.Offset">
            <summary>
            Offset of the shadow relative to the View
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IShapeView">
            <summary>
            Represents a View that enables you to draw a shape to the screen.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IShapeView.Shape">
            <summary>
            Gets the Shape definition to render.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IShapeView.Aspect">
            <summary>
            Determines how a Shape's contents are stretched to fill the view's layout space.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IShapeView.Fill">
            <summary>
            Indicates the brush used to paint the shape's interior.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ISlider">
            <summary>
            Represents a View that inputs a linear value.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISlider.MinimumTrackColor">
            <summary>
            Gets or sets the color of the portion of the slider track that contains the minimum value of the slider.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISlider.MaximumTrackColor">
            <summary>
            Gets or sets the color of the portion of the slider track that contains the maximum value of the slider.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISlider.ThumbColor">
            <summary>
            Gets or sets the color of the slider thumb button.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISlider.ThumbImageSource">
            <summary>
            Gets the image to use for the slider thumb button.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ISlider.DragStarted">
            <summary>
            Notify when drag starts.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ISlider.DragCompleted">
            <summary>
            Notify when drag is completed.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IStackLayout">
            <summary>
            A Layout that positions child elements in a single line which can be oriented vertically or horizontally.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStackLayout.Spacing">
            <summary>
            Specifies the amount of space between children.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IStackNavigation">
            <summary>
            Provides stack based navigation for the .NET MAUI app.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IStackNavigationView">
            <summary>
            An IView that provides stack based navigation for the .NET MAUI app.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IStepper">
            <summary>
             Represents a View that consists of two buttons labeled with minus and plus signs.
             Use a Stepper for selecting a numeric value from a range of values.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStepper.Interval">
            <summary>
            Gets the amount by which Value is increased or decreased.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IStroke">
            <summary>
            Define how the outline is painted on elements.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStroke.Stroke">
            <summary>
            Indicates the color used to paint the shape's outline.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStroke.StrokeThickness">
            <summary>
            Represents a collection of double values that indicate the pattern of dashes and gaps
            that are used to outline a shape.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStroke.StrokeLineCap">
            <summary>
            Describes the shape at the start and end of a line or segment.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStroke.StrokeLineJoin">
            <summary>
            Specifies the type of join that is used at the vertices of a shape.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStroke.StrokeDashPattern">
            <summary>
            Specifies the distance within the dash pattern where a dash begins.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStroke.StrokeDashOffset">
            <summary>
            Gets a value that specifies the distance within the dash pattern where a dash begins.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IStroke.StrokeMiterLimit">
            <summary>
            Specifies the limit on the ratio of the miter length to half the StrokeThickness
            of a shape. 
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ISwipeItem">
            <summary>
            Represents an individual command in a SwipeView.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeItem.AutomationId">
            <summary>
            Gets the string that uniquely identifies the element.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ISwipeItem.OnInvoked">
            <summary>
            Occurs when user interaction indicates that the command represented by this item should execute.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeItemMenuItem.Background">
            <summary>
            Gets the paint which will fill the background of a View.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeItemMenuItem.Visibility">
            <summary>
            Gets a value that determines whether this View should be part of the visual tree or not.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ISwipeItems">
            <summary>
            Represents a collection of SwipeItem objects.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeItems.Mode">
            <summary>
            Gets a value that indicates the effect of a swipe interaction.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeItems.SwipeBehaviorOnInvoked">
            <summary>
            Defines constants that specify how a SwipeView behaves after a command is invoked.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ISwipeItemView">
            <summary>
            Represents a custom individual command in a SwipeView.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ISwipeView">
            <summary>
            Represents a container that provides access to contextual commands through touch interactions.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeView.Threshold">
            <summary>
            Gets a value that represents the minimum swipe distance that must be achieved for a swipe to be recognized.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeView.LeftItems">
            <summary>
            Gets the items that can be invoked when the control is swiped from the left side.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeView.RightItems">
            <summary>
            Gets the items that can be invoked when the control is swiped from the right side.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeView.TopItems">
            <summary>
            Gets the items that can be invoked when the control is swiped from the top down.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeView.BottomItems">
            <summary>
            Gets the items that can be invoked when the control is swiped from the bottom up.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeView.IsOpen">
            <summary>
            Gets a value indicating whether the swipe view is open or not.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwipeView.SwipeTransitionMode">
            <summary>
            Define the swipe transition in the control.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ISwipeView.SwipeStarted(Microsoft.Maui.SwipeViewSwipeStarted)">
            <summary>
            Event that is fired when the swipe starts.
            </summary>
            <param name="swipeStarted">Provides information related to the swipe gesture with data such as the swipe direction.</param>
        </member>
        <member name="M:Microsoft.Maui.ISwipeView.SwipeChanging(Microsoft.Maui.SwipeViewSwipeChanging)">
            <summary>
            Event that is fired when the swipe starts.
            </summary>
            <param name="swipeChanging">Provides information related to the swipe gesture with data such as the swipe direction.</param>
        </member>
        <member name="M:Microsoft.Maui.ISwipeView.SwipeEnded(Microsoft.Maui.SwipeViewSwipeEnded)">
            <summary>
            Event that is fired when the swipe is finished.
            </summary>
            <param name="swipeEnded">Provides information related to the swipe gesture with data such as the swipe direction.</param>
        </member>
        <member name="M:Microsoft.Maui.ISwipeView.RequestOpen(Microsoft.Maui.SwipeViewOpenRequest)">
            <summary>
            Open the swipe view.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.ISwipeView.RequestClose(Microsoft.Maui.SwipeViewCloseRequest)">
            <summary>
            Closes the swipe view.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ISwitch">
            <summary>
            Represents a View that provides a toggled value.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwitch.IsOn">
            <summary>
            Gets or sets a Boolean value that indicates whether this Switch is toggled.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwitch.TrackColor">
            <summary>
            Gets the Switch Track Color.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ISwitch.ThumbColor">
            <summary>
            Gets the Switch Thumb Color.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITabbedView">
            <summary>
            Represents a View that consists of a list of tabs and a larger detail area, 
            with each tab loading content into the detail area.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IText">
            <summary>
            Provides functionality to be able to customize Text.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IText.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITextAlignment">
            <summary>
            Provides functionality to be able to align Text.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextAlignment.HorizontalTextAlignment">
            <summary>
            Gets the horizontal text alignment.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextAlignment.VerticalTextAlignment">
            <summary>
            Gets the vertical text alignment.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITextButton">
            <summary>
            Functionality related with the Button View text.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITextInput">
            <summary>
            Represents a View which can take keyboard input.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextInput.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextInput.IsTextPredictionEnabled">
            <summary>
            Gets a value that controls whether text prediction and automatic text correction is on or off.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextInput.IsSpellCheckEnabled">
            <summary>
            Gets a value that controls whether spellchecking is on or off.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextInput.IsReadOnly">
            <summary>
            Gets a value indicating whether or not the view is read-only.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextInput.Keyboard">
            <summary>
            Gets the keyboard input type.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextInput.MaxLength">
            <summary>
            Gets the maximum allowed length of input.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextInput.CursorPosition">
            <summary>
            Gets or sets the position of the cursor.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextInput.SelectionLength">
            <summary>
            Gets the length of the selection.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITextStyle">
            <summary>
            Provides functionality to be able to customize the appearance of text.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextStyle.TextColor">
            <summary>
            Gets the text color.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextStyle.Font">
            <summary>
            Gets the font family, style and size of the font.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITextStyle.CharacterSpacing">
            <summary>
            Gets the spacing between characters of the text.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITimePicker">
            <summary>
            Represents a View that allows the user to select a time.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITimePicker.Format">
            <summary>
            The format of the time to display to the user.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITimePicker.Time">
            <summary>
            Gets the displayed time.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITitledElement">
            <summary>
            Represent the title content used in Navigation Views.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITitledElement.Title">
            <summary>
            Gets the title of this element.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IToolbar">
            <summary>
            Represents a bar that may display the page title, navigation affordances, and other interactive items.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IToolbar.BackButtonVisible">
            <summary>
            Gets or sets a value that indicates whether the back button is enabled or disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IToolbar.IsVisible">
            <summary>
             Gets or sets a value that indicates whether the toolbar is visible or not.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IToolbar.Title">
            <summary>
            Gets the title for the Toolbar.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IToolTipElement">
            <summary>
            Indicates that this element has a ToolTip to show.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IToolTipElement.ToolTip">
            <summary>
            Represents a small rectangular pop-up window that displays a brief description of a 
            view's purpose when the user rests the pointer on the view.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ITransform">
            <summary>
            Provides functionality to be able to apply transformations to a View.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.TranslationX">
            <summary>
            Gets the X translation delta of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.TranslationY">
            <summary>
            Gets the Y translation delta of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.Scale">
            <summary>
            Gets the scale factor applied to the element.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.ScaleX">
            <summary>
            Gets the scale about the X-axis factor applied to the element.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.ScaleY">
            <summary>
            Gets the scale about the Y-axis factor applied to the element.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.Rotation">
            <summary>
            Gets the rotation (in degrees) about the Z-axis (affine rotation)
            when the element is rendered.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.RotationX">
            <summary>
            Gets the rotation (in degrees) about the X-axis (perspective rotation)
            when the element is rendered.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.RotationY">
            <summary>
            Gets the rotation (in degrees) about the Y-axis (perspective rotation)
            when the element is rendered.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.AnchorX">
            <summary>
            Gets the X component of the center point for any transform, relative
            to the bounds of the element.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.ITransform.AnchorY">
            <summary>
            Gets the Y component of the center point for any transform, relative
            to the bounds of the element.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IView">
            <summary>
            Represents a visual element that is used to place layouts and controls on the screen.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.AutomationId">
            <summary>
            Id used by automation tools to interact with this View
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.FlowDirection">
            <summary>
            Direction in which the UI elements are scanned by the eye
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.HorizontalLayoutAlignment">
            <summary>
            Determines the horizontal aspect of this element's arrangement in a container
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.VerticalLayoutAlignment">
            <summary>
            Determines the vertical aspect of this element's arrangement in a container
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Semantics">
            <summary>
            Adds semantics to every View for accessibility
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Clip">
            <summary>
            Gets the Path used to define the outline of the contents of a View.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Shadow">
            <summary>
            Paints a shadow around the target View.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.IsEnabled">
            <summary>
            Gets a value indicating whether this View is enabled in the user interface. 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.IsFocused">
            <summary>
            Gets a value indicating whether this View is focused currently.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Visibility">
            <summary>
            Gets a value that determines whether this View should be part of the visual tree or not.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Opacity">
            <summary>
            Gets the opacity value applied to the view when it is rendered.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Background">
            <summary>
            Gets the paint which will fill the background of a View.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Frame">
            <summary>
            Gets the bounds of the View within its container.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Width">
            <summary>
            Gets the specified width of the IView. 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.MinimumWidth">
            <summary>
            Gets the specified minimum width constraint of the IView, between zero and double.PositiveInfinity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.MaximumWidth">
            <summary>
            Gets the specified maximum width constraint of the IView, between zero and double.PositiveInfinity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Height">
            <summary>
            Gets the specified height of the IView. 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.MinimumHeight">
            <summary>
            Gets the specified minimum height constraint of the IView, between zero and double.PositiveInfinity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.MaximumHeight">
            <summary>
            Gets the specified maximum height constraint of the IView, between zero and double.PositiveInfinity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Margin">
            <summary>
            The Margin represents the distance between an view and its adjacent views.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.DesiredSize">
            <summary>
            Gets the current desired Size of this View. 
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.ZIndex">
            <summary>
            Determines the drawing order of this IView within an ILayout; higher z-indexes will draw over lower z-indexes.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.Handler">
            <summary>
            Gets or sets the View Handler of the View.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IView.Arrange(Microsoft.Maui.Graphics.Rect)">
            <summary>
            Positions child elements and determines a size for an Element.
            </summary>
            <param name="bounds">The size that the parent computes for the child element.</param>
            <returns>Return the actual arranged Size for this element.</returns>
        </member>
        <member name="M:Microsoft.Maui.IView.Measure(System.Double,System.Double)">
            <summary>
            Updates the size of an View.
            </summary>
            <param name="widthConstraint">The width that a parent element can allocate a child element.</param>
            <param name="heightConstraint">The height that a parent element can allocate a child element.</param>
            <returns>Return the desired Size for this element.</returns>
        </member>
        <member name="M:Microsoft.Maui.IView.InvalidateMeasure">
            <summary>
            Signals that the current measure value of this View is no longer valid and must be recomputed during the next measure pass.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IView.InvalidateArrange">
            <summary>
            Method that is called to invalidate the layout of this View.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IView.Focus">
            <summary>
            Attempts to set focus to this View.
            </summary>
            <returns>true if the keyboard focus was set to this element; false if the call to this method did not force a focus change.</returns>
        </member>
        <member name="M:Microsoft.Maui.IView.Unfocus">
            <summary>
            Unsets focus to this View.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IView.InputTransparent">
            <summary>
            Gets a value indicating whether this element should be involved in the user interaction cycle.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IVisualDiagnosticsOverlay.ScrollToElement">
            <summary>
            Gets or sets a value indicating whether to automatically scroll to an element when adding an adorner, if available.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IVisualDiagnosticsOverlay.EnableElementSelector">
            <summary>
            Gets or sets a value indicating whether to enable the element selector on the diagnostics overlay.
            If enabled, this will also enable <see cref="P:Microsoft.Maui.IWindowOverlay.DisableUITouchEventPassthrough"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IVisualDiagnosticsOverlay.Offset">
            <summary>
            Gets the offset point used to adjust the platform drawing bounds for a given Adorner.
            Used when the underlying operating system may not give exact placement for where elements are.
            Ex. Android and the Status Bar.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.AddAdorner(Microsoft.Maui.IAdorner,System.Boolean)">
            <summary>
            Adds a new adorner to the Visual Diagnostics Overlay.
            </summary>
            <param name="adorner"><see cref="T:Microsoft.Maui.IAdorner"/>.</param>
            <param name="scrollToElement">When adding the adorner, scroll to the element. Only applies if the element is contained in an <see cref="T:Microsoft.Maui.IScrollView"/>.</param>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.AddAdorner(Microsoft.Maui.IVisualTreeElement,System.Boolean)">
            <summary>
            Adds a new adorner to the Visual Diagnostics Overlay. Uses the default Adorner for drawing.
            </summary>
            <param name="visualElement"><see cref="T:Microsoft.Maui.IVisualTreeElement"/>.</param>
            <param name="scrollToElement">When adding the adorner, scroll to the element. Only applies if the element is contained in an <see cref="T:Microsoft.Maui.IScrollView"/>.</param>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.RemoveAdorner(Microsoft.Maui.IAdorner)">
            <summary>
            Removes adorner from Visual Diagnostics Overlay.
            </summary>
            <param name="adorner"><see cref="T:Microsoft.Maui.IAdorner"/>.</param>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.RemoveAdorners">
            <summary>
            Removes all adorners from the Visual Diagnostics Overlay.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.RemoveAdorners(Microsoft.Maui.IVisualTreeElement)">
            <summary>
            Removes all adorners containing the inner <see cref="T:Microsoft.Maui.IVisualTreeElement"/>.
            </summary>
            <param name="visualElement"><see cref="T:Microsoft.Maui.IVisualTreeElement"/>.</param>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.AddScrollableElementHandlers">
            <summary>
            Adds scrollable element handles attached to <see cref="T:Microsoft.Maui.IScrollView"/>.
            Used for tracking when a user has scrolled, in order to update the layer to redraw.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.AddScrollableElementHandler(Microsoft.Maui.IScrollView)">
            <summary>
            Adds scrollable element handle attached to <see cref="T:Microsoft.Maui.IScrollView"/>.
            Used for tracking when a user has scrolled, in order to update the layer to redraw.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.RemoveScrollableElementHandler">
            <summary>
            Removes any existing scrollable element handles attached to <see cref="T:Microsoft.Maui.IScrollView"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IVisualDiagnosticsOverlay.ScrollToView(Microsoft.Maui.IVisualTreeElement)">
            <summary>
            Automatically scroll to a given element within the view, if available.
            </summary>
            <param name="element">Element to scroll to.</param>
        </member>
        <member name="P:Microsoft.Maui.IVisualDiagnosticsOverlay.ScrollViews">
            <summary>
            Gets the Scroll Views in a given window, to be handled by the layer for
            when they scroll to update the underlying adorners.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IVisualTreeElement.GetVisualChildren">
            <summary>Gets a readonly list of the element's visual children.</summary>
            <remarks>Unless explicitly defined, an element's visual children will also be its logical children.</remarks>
            <returns>A readonly list containing the element's visual children.</returns>
        </member>
        <member name="M:Microsoft.Maui.IVisualTreeElement.GetVisualParent">
            <summary>Gets the element's visual parent.</summary>
            <returns>The element's parent.</returns>
        </member>
        <member name="T:Microsoft.Maui.IWebView">
            <summary>
            Represents a View that presents HTML content.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWebView.Source">
            <summary>
            Provide the data for a WebView.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWebView.Cookies">
            <summary>
            When set this will act as a sync for cookies.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWebView.UserAgent">
            <summary>
            Gets or sets the WebView's user agent string.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWebView.CanGoBack">
            <summary>
            Gets a value that indicates whether the user can navigate to previous pages.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWebView.CanGoForward">
            <summary>
            Gets a value that indicates whether the user can navigate forward.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWebView.GoBack">
            <summary>
            Navigates to the previous page.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWebView.GoForward">
            <summary>
            Navigates to the next page in the list of visited pages.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWebView.Reload">
            <summary>
            Reload the current content.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWebView.Eval(System.String)">
            <summary>
            Evaluates the script that is specified by script.
            </summary>
            <param name="script">A script to evaluate.</param>
        </member>
        <member name="M:Microsoft.Maui.IWebView.EvaluateJavaScriptAsync(System.String)">
            <summary>
            On platforms that support JavaScript evaluation, evaluates script.
            </summary>
            <param name="script">The script to evaluate.</param>
            <returns>A task that contains the result of the evaluation as a string.</returns>
        </member>
        <member name="M:Microsoft.Maui.IWebView.Navigating(Microsoft.Maui.WebNavigationEvent,System.String)">
            <summary>
            For internal use by the .NET MAUI platform.
            Raised after web navigation begins.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWebView.Navigated(Microsoft.Maui.WebNavigationEvent,System.String,Microsoft.Maui.WebNavigationResult)">
            <summary>
            For internal use by the .NET MAUI platform.
            Raised after web navigation completes.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IWebViewSource">
            <summary>
            Provide the data for a WebView.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWebViewSource.Load(Microsoft.Maui.IWebViewDelegate)">
            <summary>
            Load the HTML content from the source.
            </summary>
            <param name="webViewDelegate">WebViewDelegate parameter.</param>
        </member>
        <member name="T:Microsoft.Maui.IWindow">
            <summary>
            Provides the ability to create, configure, show, and manage Windows.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.Content">
            <summary>
            Gets the current Page displayed in the Window.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.VisualDiagnosticsOverlay">
            <summary>
            Gets the current visual diagnostics overlay for the Window.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.Overlays">
            <summary>
            Gets the read only collection of Window Overlays on top of the Window.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.X">
            <summary>
            Gets the specified X coordinate of the IWindow.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.Y">
            <summary>
            Gets the specified Y coordinate of the IWindow.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.Width">
            <summary>
            Gets the specified width of the IWindow.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.MinimumWidth">
            <summary>
            Gets the specified minimum width constraint of the IWindow, between zero and double.PositiveInfinity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.MaximumWidth">
            <summary>
            Gets the specified maximum width constraint of the IWindow, between zero and double.PositiveInfinity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.Height">
            <summary>
            Gets the specified height of the IWindow.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.MinimumHeight">
            <summary>
            Gets the specified minimum height constraint of the IWindow, between zero and double.PositiveInfinity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.MaximumHeight">
            <summary>
            Gets the specified maximum height constraint of the IWindow, between zero and double.PositiveInfinity.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindow.FlowDirection">
            <summary>
            Direction in which the UI elements are scanned by the eye.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindow.AddOverlay(Microsoft.Maui.IWindowOverlay)">
            <summary>
            Adds a Window Overlay to the current Window.
            </summary>
            <param name="overlay"><see cref="T:Microsoft.Maui.IWindowOverlay"/>.</param>
            <returns>Boolean if the window overlay was added.</returns>
        </member>
        <member name="M:Microsoft.Maui.IWindow.RemoveOverlay(Microsoft.Maui.IWindowOverlay)">
            <summary>
            Removes a Window Overlay to the current Window.
            </summary>
            <param name="overlay"><see cref="T:Microsoft.Maui.IWindowOverlay"/>.</param>
            <returns>Boolean if the window overlay was removed.</returns>
        </member>
        <member name="M:Microsoft.Maui.IWindow.Created">
            <summary>
            Occurs when the Window is created.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindow.Resumed">
            <summary>
            Occurs when the Window is resumed from a sleeping state.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindow.Activated">
            <summary>
            Occurs when the Window is activated.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindow.Deactivated">
            <summary>
            Occurs when the Window is deactivated.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindow.Stopped">
            <summary>
            Occurs when the Window is stopped.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindow.Destroying">
            <summary>
            Occurs when the Window is destroyed.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindow.Backgrounding(Microsoft.Maui.IPersistedState)">
            <summary>
            Occurs when the Window is entering a background state.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindow.BackButtonClicked">
            <summary>
            Occurs when the back button is pressed.
            </summary>
            <returns>Whether or not the back navigation was handled.</returns>
        </member>
        <member name="P:Microsoft.Maui.IWindowOverlay.DisableUITouchEventPassthrough">
            <summary>
            Gets or sets a value indicating whether to disable UI Touch Event Passthrough.
            Enable this when you want to enable hit testing the current overlay without
            interfacing with the underlaying UI.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindowOverlay.EnableDrawableTouchHandling">
            <summary>
            Gets or sets a value indicating whether to enable handling touch events when
            selecting any drawable element on the overlay.
            This setting is overridden by <see cref="P:Microsoft.Maui.IWindowOverlay.DisableUITouchEventPassthrough"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindowOverlay.IsVisible">
            <summary>
            Gets or sets a value indicating whether to draw the window overlay.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindowOverlay.Window">
            <summary>
            Gets the containing <see cref="T:Microsoft.Maui.IWindow"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindowOverlay.Density">
            <summary>
            Gets the Density for the layer.
            Can be used to pass through Density settings to underlying drawables.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindowOverlay.WindowElements">
            <summary>
            Gets the current collection of drawable elements on the overlay.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IWindowOverlay.IsPlatformViewInitialized">
            <summary>
            Gets a value indicating whether the platform touch and drawing layer has been initialized.
            If it has not, you will be unable to draw or use hit testing on the Overlay.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.IWindowOverlay.Tapped">
            <summary>
            Event Handler for touch events on the Overlay.
            Called when a user touched the Overlay.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindowOverlay.Invalidate">
            <summary>
            Invalidates the layer.
            Call to force the layer to redraw.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindowOverlay.HandleUIChange">
            <summary>
            Handles updating the drawing layer when a UI layout change happens.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindowOverlay.AddWindowElement(Microsoft.Maui.IWindowOverlayElement)">
            <summary>
            Adds a new drawable element to the overlay.
            </summary>
            <param name="element"><see cref="T:Microsoft.Maui.IWindowOverlayElement"/>.</param>
            <returns>Boolean indicating if the drawable was added to the collection.</returns>
        </member>
        <member name="M:Microsoft.Maui.IWindowOverlay.RemoveWindowElement(Microsoft.Maui.IWindowOverlayElement)">
            <summary>
            Removes a drawable element from the overlay.
            </summary>
            <param name="element"><see cref="T:Microsoft.Maui.IWindowOverlayElement"/>.</param>
            <returns>Boolean indicating if the drawable was removed from the collection.</returns>
        </member>
        <member name="M:Microsoft.Maui.IWindowOverlay.RemoveWindowElements">
            <summary>
            Removes all drawable elements from the overlay.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindowOverlay.Initialize">
            <summary>
            Initialize the overlay.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindowOverlay.Deinitialize">
            <summary>
            Deinitialize the overlay.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IWindowOverlayElement">
            <summary>
            Element drawn on top of IWindowOverlay.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IWindowOverlayElement.Contains(Microsoft.Maui.Graphics.Point)">
            <summary>
            Gets a boolean for if the given point contained within the window overlay element.
            </summary>
            <param name="point">The point to check.</param>
            <returns>Boolean if the point is contained within the element.</returns>
        </member>
        <member name="T:Microsoft.Maui.Dispatching.Dispatcher">
            <inheritdoc/>
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Dispatching.Dispatcher.IsDispatchRequired">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.Dispatcher.Dispatch(System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.Dispatcher.DispatchDelayed(System.TimeSpan,System.Action)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.Dispatcher.CreateTimer">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Dispatching.DispatcherProvider">
            <inheritdoc/>
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.Dispatching.DispatcherProvider.Current">
            <summary>
            Gets the currently set <see cref="T:Microsoft.Maui.Dispatching.IDispatcherProvider"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.DispatcherProvider.SetCurrent(Microsoft.Maui.Dispatching.IDispatcherProvider)">
            <summary>
            Sets the current dispatcher provider.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcherProvider"/> object to set as the current dispatcher provider.</param>
            <returns><see langword="true"/> if the current dispatcher was actually updated, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.DispatcherProvider.GetForCurrentThread">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.Dispatching.DispatcherExtensions">
            <summary>
            This class provides a set of extension methods that can be used on objects implementing <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync``1(Microsoft.Maui.Dispatching.IDispatcher,System.Func{``0})">
            <summary>
            Schedules the provided callback on the UI thread from a worker thread, and returns the results asynchronously.
            </summary>
            <typeparam name="T">The type returned from this method.</typeparam>
            <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> instance this method is called on.</param>
            <param name="func">The method to be executed by the dispatcher.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object containing information about the state of the dispatcher operation.</returns>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync(Microsoft.Maui.Dispatching.IDispatcher,System.Action)">
            <summary>
            Schedules the provided action on the UI thread from a worker thread.
            </summary>
            <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> instance this method is called on.</param>
            <param name="action">The method to be executed by the dispatcher.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync``1(Microsoft.Maui.Dispatching.IDispatcher,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Schedules the provided function on the UI thread from a worker thread.
            </summary>
            <typeparam name="T">The type returned from this method.</typeparam>
            <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> instance this method is called on.</param>
            <param name="funcTask">The function to be executed by the dispatcher.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> object containing information about the state of the dispatcher operation.</returns>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.DispatcherExtensions.DispatchAsync(Microsoft.Maui.Dispatching.IDispatcher,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Schedules the provided function on the UI thread from a worker thread.
            </summary>
            <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> instance this method is called on.</param>
            <param name="funcTask">The function to be executed by the dispatcher.</param>
            <returns><see langword="Task"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.DispatcherExtensions.GetSynchronizationContextAsync(Microsoft.Maui.Dispatching.IDispatcher)">
            <summary>
            Gets the synchronization context for the current thread.
            </summary>
            <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> instance this method is called on.</param>
            <returns>A <see cref="T:System.Threading.SynchronizationContext"/> object representing the current synchronization context.</returns>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.DispatcherExtensions.StartTimer(Microsoft.Maui.Dispatching.IDispatcher,System.TimeSpan,System.Func{System.Boolean})">
            <summary>
            Starts a timer on the specified <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> context.
            </summary>
            <param name="dispatcher">The <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> instance this method is called on.</param>
            <param name="interval">Sets the amount of time between timer ticks.</param>
            <param name="callback">The callback on which the dispatcher returns when the event is dispatched.
            If the result of the callback is <see langword="true"/>, the timer will repeat, otherwise the timer stops.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="callback"/> is <see langword="null"/>.</exception>
        </member>
        <member name="T:Microsoft.Maui.Dispatching.IDispatcher">
            <summary>
            Provides the core event message dispatcher. Instances of this type are responsible for processing the window messages and dispatching the events to the client.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.IDispatcher.Dispatch(System.Action)">
            <summary>
            Schedules the provided action on the UI thread from a worker thread.
            </summary>
            <param name="action">The <see cref="T:System.Action"/> to be scheduled for processing on the UI thread.</param>
            <returns><see langword="true"/> when the action has been dispatched successfully, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.IDispatcher.DispatchDelayed(System.TimeSpan,System.Action)">
            <summary>
            Schedules the provided action on the UI thread from a worker thread, taking into account the provided delay.
            </summary>
            <param name="delay">The delay taken into account before <paramref name="action"/> is dispatched.</param>
            <param name="action">The <see cref="T:System.Action"/> to be scheduled for processing on the UI thread.</param>
            <returns><see langword="true"/> when the action has been dispatched successfully, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.IDispatcher.CreateTimer">
            <summary>
            Creates a new instance of an <see cref="T:Microsoft.Maui.Dispatching.IDispatcherTimer"/> object associated with this dispatcher.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Maui.Dispatching.IDispatcher.IsDispatchRequired">
            <summary>
            Gets a value that indicates whether dispatching is required for this action.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Dispatching.IDispatcherTimer">
            <summary>
            Provides a timer that is integrated into the <see cref="T:Microsoft.Maui.Dispatching.Dispatcher"/> queue, which is processed at a specified interval of time.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Dispatching.IDispatcherTimer.Interval">
            <summary>
            Gets or sets the amount of time between timer ticks.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Dispatching.IDispatcherTimer.IsRepeating">
            <summary>
            Gets or sets whether the timer should repeat.
            </summary>
            <remarks>When set the <see langword="false"/>, the timer will run only once.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Dispatching.IDispatcherTimer.IsRunning">
            <summary>
            Gets a value that indicates whether the timer is running.
            </summary>
        </member>
        <member name="E:Microsoft.Maui.Dispatching.IDispatcherTimer.Tick">
            <summary>
            Occurs when the timer interval has elapsed.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.IDispatcherTimer.Start">
            <summary>
            Starts the timer.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.IDispatcherTimer.Stop">
            <summary>
            Stops the timer.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Dispatching.IDispatcherProvider">
            <summary>
            A provider that can supply a <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> implementation for the current UI thread.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Dispatching.IDispatcherProvider.GetForCurrentThread">
            <summary>
            Gets a <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> implementation for the current UI thread.
            </summary>
            <returns>Instance of a <see cref="T:Microsoft.Maui.Dispatching.IDispatcher"/> implementation.</returns>
        </member>
        <member name="M:Microsoft.Maui.ArrayExtensions.Insert``1(``0[],System.Int32,``0)">
            <summary>
            Inserts an object at a certain index of an array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="self">The array to insert the item in.</param>
            <param name="index">The index where <paramref name="item"/> needs to be inserted.</param>
            <param name="item">The item of type <typeparamref name="T"/> to be inserted.</param>
            <returns>A new array of type <typeparamref name="T"/> with <paramref name="item"/> inserted at the specified index.</returns>
        </member>
        <member name="M:Microsoft.Maui.ArrayExtensions.Remove``1(``0[],``0)">
            <summary>
            Removes an item from an array by specifying the object.
            </summary>
            <typeparam name="T">The type of object contained in this array.</typeparam>
            <param name="self">The array to remove the item from.</param>
            <param name="item">The item of type <typeparamref name="T"/> to be removed.</param>
            <returns>A new array of type <typeparamref name="T"/> where <paramref name="item"/> has been removed.</returns>
        </member>
        <member name="M:Microsoft.Maui.ArrayExtensions.RemoveAt``1(``0[],System.Int32)">
            <summary>
            Removes an item from an array by specifying the index.
            </summary>
            <typeparam name="T">The type of object contained in this array.</typeparam>
            <param name="self">The array to remove the item from.</param>
            <param name="index">The index of the item that will be removed.</param>
            <returns>A new array of type <typeparamref name="T"/> where the item at <paramref name="index"/> has been removed.</returns>
        </member>
        <member name="M:Microsoft.Maui.ArrayExtensions.Last``1(``0[])">
            <summary>
            Retrieves the last item from an array.
            </summary>
            <typeparam name="T">The type of object to be retrieved from <paramref name="self"/>.</typeparam>
            <param name="self">The array to retrieve the last item from.</param>
            <returns>An object of type <typeparamref name="T"/> that is the last item in the collection.</returns>
        </member>
        <member name="M:Microsoft.Maui.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Loops trough each item in <paramref name="enumeration"/> and invokes <paramref name="action"/> on it.
            </summary>
            <typeparam name="T">The type of object contained in this collection.</typeparam>
            <param name="enumeration">The collection to loop through.</param>
            <param name="action">The action that is invoked on each item in this collection separately.
            The current item of  type <typeparamref name="T"/> will be provided as an input parameter.</param>
        </member>
        <member name="M:Microsoft.Maui.EnumerableExtensions.GroupToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <param name="enumeration"></param>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Maui.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Find the index of a specific item within the collection.
            </summary>
            <typeparam name="T">The type of object contained in this collection.</typeparam>
            <param name="enumerable">The collection in which to look for <paramref name="item"/>.</param>
            <param name="item">The object to be located in this collection.</param>
            <returns>The index of <paramref name="item"/> in the collection or -1 when the item is not found.</returns>
            <exception cref="T:System.ArgumentNullException">Throws when <paramref name="enumerable"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:Microsoft.Maui.EnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Find the index for the first occurrence of an item within the collection as matched through the specified predicate.
            </summary>
            <typeparam name="T">The type of object contained in this collection.</typeparam>
            <param name="enumerable">The collection in which to look for the item.</param>
            <param name="predicate">The predicate used to evaluate each item and see if it matches.
            The item currently evaluated of type <typeparamref name="T"/> is provided as an input parameter.
            The resulting value should be a <see cref="T:System.Boolean"/> which is <see langword="true"/> if this is the item to match, otherwise <see langword="false"/>.</param>
            <returns>The index of the first item to match through <paramref name="predicate"/> in the collection or -1 when no match is not found.</returns>
        </member>
        <member name="M:Microsoft.Maui.EnumerableExtensions.Last``1(System.Collections.Generic.IList{``0})">
            <summary>
            Retrieves the last item from a <see cref="T:System.Collections.Generic.IList`1"/> instance.
            </summary>
            <typeparam name="T">The type of object to be retrieved from <paramref name="self"/>.</typeparam>
            <param name="self">The collection to retrieve the last item from.</param>
            <returns>An object of type <typeparamref name="T"/> that is the last item in the collection.</returns>
        </member>
        <member name="M:Microsoft.Maui.IndicatorViewExtensions.GetMaximumVisible(Microsoft.Maui.IIndicatorView)">
            <summary>
            Gets the maximum number of visible indicator items that can be shown.
            </summary>
            <param name="indicatorView">The <see cref="T:Microsoft.Maui.IIndicatorView"/> instance to get the maximum visible items for.</param>
            <returns>Maximum number of visible indicator items that can be shown.</returns>
        </member>
        <member name="M:Microsoft.Maui.IndicatorViewExtensions.IsCircleShape(Microsoft.Maui.IIndicatorView)">
            <summary>
            Determines whether the current indicator items are circle shaped.
            </summary>
            <param name="indicatorView">The <see cref="T:Microsoft.Maui.IIndicatorView"/> instance to determine the indicator item shape for.</param>
            <returns><see langword="true"/> if the indicator items are circle shaped, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.ListExtensions.TryRemove``1(System.Collections.Generic.IList{``0},``0)">
            <summary>
            Attempts to remove an item from a <see cref="T:System.Collections.Generic.IList`1"/> instance.
            </summary>
            <typeparam name="T">The type of object to be removed from <paramref name="list"/>.</typeparam>
            <param name="list">The <see cref="T:System.Collections.Generic.IList`1"/> instance to remove the item from.</param>
            <param name="item">The item of type <typeparamref name="T"/> to be removed.</param>
            <returns><see langword="true"/> if the item was successfully removed, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:Microsoft.Maui.EmbeddedFont">
            <summary>
            Represents a font that is added as an embedded resource in the application.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.EmbeddedFont.FontName">
            <summary>
            The name of this font.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.EmbeddedFont.ResourceStream">
            <summary>
            A <see cref="T:System.IO.Stream"/> with which the contents of this font can be accessed.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.EmbeddedFontLoader">
            <inheritdoc/>
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.EmbeddedFontLoader.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.EmbeddedFontLoader"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.EmbeddedFontLoader.#ctor(System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.EmbeddedFontLoader"/> instance.
            </summary>
            <param name="serviceProvider">The applications <see cref="T:System.IServiceProvider"/>.
            Typically this is provided through dependency injection.</param>
        </member>
        <member name="M:Microsoft.Maui.EmbeddedFontLoader.LoadFont(Microsoft.Maui.EmbeddedFont)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.FileSystemEmbeddedFontLoader">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.FileSystemEmbeddedFontLoader.#ctor(System.String,System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.FileSystemEmbeddedFontLoader"/> instance.
            </summary>
            <param name="rootPath">Destination filesystem path for the font.</param>
            <param name="serviceProvider">The application's <see cref="T:System.IServiceProvider"/>.
            Typically this is provided through dependency injection for logging purposes.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="rootPath"/> is null.</exception>
        </member>
        <member name="M:Microsoft.Maui.FileSystemEmbeddedFontLoader.#ctor(System.Func{System.String},System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.FileSystemEmbeddedFontLoader"/> instance.
            </summary>
            <param name="getRootPath">Function which retrieves the destination filesystem path for the font.</param>
            <param name="serviceProvider">The applications <see cref="T:System.IServiceProvider"/>.
            Typically this is provided through dependency injection for logging purposes.</param>
        </member>
        <member name="M:Microsoft.Maui.FileSystemEmbeddedFontLoader.LoadFont(Microsoft.Maui.EmbeddedFont)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.FontFile">
            <summary>
            Represents a font file.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.FontFile.Extensions">
            <summary>
            Supported extensions for <see cref="T:Microsoft.Maui.FontFile"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.FontFile.FileName">
            <summary>
            The filename for this font.
            </summary>
            <remarks>This should not include the extension. If you want the filename including the extension use <see cref="M:Microsoft.Maui.FontFile.FileNameWithExtension"/>.</remarks>
        </member>
        <member name="P:Microsoft.Maui.FontFile.Extension">
            <summary>
            The filename extension for this font.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.FontFile.PostScriptName">
            <summary>
            The font PostScript name as read from the font file.
            </summary>
            <remarks>Some platforms have issues with spaces in the PostScript name. In this property spaces might be stripped.
            To get the PostScript name with spaces (if it had any) use <see cref="M:Microsoft.Maui.FontFile.GetPostScriptNameWithSpaces"/>.</remarks>
        </member>
        <member name="M:Microsoft.Maui.FontFile.FileNameWithExtension(System.String)">
            <summary>
            Gets the filename of this font file with the provided extension appended to the end.
            </summary>
            <param name="extension">The extension to append to the font filename.</param>
            <returns>The filename of this font file including the given extension.</returns>
            <remarks>The value for <paramref name="extension"/> should include a leading dot (.) character.</remarks>
        </member>
        <member name="M:Microsoft.Maui.FontFile.FileNameWithExtension">
            <summary>
            Gets the filename of this font file, including the extension.
            </summary>
            <returns>The filename of this font file, including the extension.</returns>
            <remarks>This returns the combination of <see cref="P:Microsoft.Maui.FontFile.FileName"/> and <see cref="P:Microsoft.Maui.FontFile.Extension"/>.</remarks>
        </member>
        <member name="M:Microsoft.Maui.FontFile.GetPostScriptNameWithSpaces">
            <summary>
            Gets the font PostScript name as read from the font file, including any spaces if it had any.
            </summary>
            <returns>The font PostScript name including spaces.</returns>
        </member>
        <member name="M:Microsoft.Maui.FontFile.FromString(System.String)">
            <summary>
            Creates a new instance of a <see cref="T:Microsoft.Maui.FontFile"/> object based on the value in <paramref name="input"/>.
            </summary>
            <param name="input">Can either be a filename or font family name.</param>
            <returns>A new <see cref="T:Microsoft.Maui.FontFile"/> object with all the information that could be deduced through <paramref name="input"/>.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="input"/> is <see langword="null"/></exception>
        </member>
        <member name="T:Microsoft.Maui.FontManager">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.FontManager.DefaultFontSize">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.FontManager.#ctor(Microsoft.Maui.IFontRegistrar,System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.Maui.EmbeddedFontLoader"/> instance.
            </summary>
            <param name="fontRegistrar">A <see cref="T:Microsoft.Maui.IFontRegistrar"/> instance to retrieve details from about registered fonts.</param>
            <param name="serviceProvider">The applications <see cref="T:System.IServiceProvider"/>.
            Typically this is provided through dependency injection.</param>
        </member>
        <member name="T:Microsoft.Maui.FontRegistrar">
            <inheritdoc cref="T:Microsoft.Maui.IFontRegistrar"/>
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.FontRegistrar.#ctor(Microsoft.Maui.IEmbeddedFontLoader,System.IServiceProvider)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Maui.FontRegistrar"/>.
            </summary>
            <param name="fontLoader">An instance of <see cref="T:Microsoft.Maui.IEmbeddedFontLoader"/> that is responsible for actually loading fonts.</param>
            <param name="serviceProvider">A reference to the app <see cref="T:System.IServiceProvider"/>.
            Typically this should be provided through dependency injection for logging purposes, otherwise can be ignored.</param>
        </member>
        <member name="M:Microsoft.Maui.FontRegistrar.Register(System.String,System.String,System.Reflection.Assembly)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.FontRegistrar.Register(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.FontRegistrar.GetFont(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.IEmbeddedFontLoader">
            <summary>
            The <see cref="T:Microsoft.Maui.IEmbeddedFontLoader"/> is able to load a font from the embedded resources.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IEmbeddedFontLoader.LoadFont(Microsoft.Maui.EmbeddedFont)">
            <summary>
            Load the font from the embedded resources.
            </summary>
            <param name="font">A <see cref="T:Microsoft.Maui.EmbeddedFont"/> object with the information on the font to load.</param>
            <returns>The font name if the font was loaded correctly, otherwise <see langword="null"/>.</returns>
        </member>
        <member name="T:Microsoft.Maui.IFontManager">
            <summary>
            The <see cref="T:Microsoft.Maui.FontManager"/> handles all fonts, font families and font sizes throughout the application.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IFontManager.DefaultFontSize">
            <summary>
            The default font size for the operating system.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.IFontRegistrar">
            <summary>
            The <see cref="T:Microsoft.Maui.IFontRegistrar"/> keeps track of the fonts that are registered in our application.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IFontRegistrar.Register(System.String,System.String,System.Reflection.Assembly)">
            <summary>
            Registers a font in the app font cache.
            </summary>
            <param name="filename">The filename of the font to register.</param>
            <param name="alias">An optional alias with which you can also refer to this font.</param>
            <param name="assembly">The assembly (not used).</param>
        </member>
        <member name="M:Microsoft.Maui.IFontRegistrar.Register(System.String,System.String)">
            <summary>
            Registers a font in the app font cache.
            </summary>
            <param name="filename">The filename of the font to register.</param>
            <param name="alias">An optional alias with which you can also refer to this font.</param>
        </member>
        <member name="M:Microsoft.Maui.IFontRegistrar.GetFont(System.String)">
            <summary>
            Retrieves the font for actual usages.
            </summary>
            <param name="font">The key with which the font is registered with the cache.</param>
            <returns>The name of then font when it's found, otherwise <see langword="null"/>.</returns>
        </member>
        <member name="T:Microsoft.Maui.Graphics.IShape">
            <summary>
            Provides a base definition class for shape elements, such as
            Ellipse, Polygon, or Rectangle.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Handlers.ActivityIndicatorHandler">
            <summary>
            Represents the view handler for the abstract <see cref="T:Microsoft.Maui.IActivityIndicator"/> view and its platform-specific implementation.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/maui/user-interface/handlers/">Conceptual documentation on handlers</seealso>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ActivityIndicatorHandler.MapIsRunning(Microsoft.Maui.Handlers.IActivityIndicatorHandler,Microsoft.Maui.IActivityIndicator)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IActivityIndicator.IsRunning"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="activityIndicator">The associated <see cref="T:Microsoft.Maui.IActivityIndicator"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ActivityIndicatorHandler.MapColor(Microsoft.Maui.Handlers.IActivityIndicatorHandler,Microsoft.Maui.IActivityIndicator)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IActivityIndicator.Color"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="activityIndicator">The associated <see cref="T:Microsoft.Maui.IActivityIndicator"/> instance.</param>
        </member>
        <member name="T:Microsoft.Maui.Handlers.ApplicationHandler">
            <summary>
            Represents the view handler for the abstract <see cref="T:Microsoft.Maui.IApplication"/> view and its platform-specific implementation.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/maui/user-interface/handlers/">Conceptual documentation on handlers</seealso>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ApplicationHandler.MapTerminate(Microsoft.Maui.Handlers.ApplicationHandler,Microsoft.Maui.IApplication,System.Object)">
            <summary>
            Maps the abstract "Terminate" command to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="application">The associated <see cref="T:Microsoft.Maui.IApplication"/> instance.</param>
            <param name="args">The associated command arguments.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ApplicationHandler.MapOpenWindow(Microsoft.Maui.Handlers.ApplicationHandler,Microsoft.Maui.IApplication,System.Object)">
            <summary>
            Maps the abstract <see cref="M:Microsoft.Maui.IApplication.OpenWindow(Microsoft.Maui.IWindow)"/> command to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="application">The associated <see cref="T:Microsoft.Maui.IApplication"/> instance.</param>
            <param name="args">The associated command arguments.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ApplicationHandler.MapCloseWindow(Microsoft.Maui.Handlers.ApplicationHandler,Microsoft.Maui.IApplication,System.Object)">
            <summary>
            Maps the abstract <see cref="M:Microsoft.Maui.IApplication.CloseWindow(Microsoft.Maui.IWindow)"/> command to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="application">The associated <see cref="T:Microsoft.Maui.IApplication"/> instance.</param>
            <param name="args">The associated command arguments.</param>
        </member>
        <member name="T:Microsoft.Maui.Handlers.BorderHandler">
            <summary>
            Represents the view handler for the abstract <see cref="T:Microsoft.Maui.IBorderView"/> view and its platform-specific implementation.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/maui/user-interface/handlers/">Conceptual documentation on handlers</seealso>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapBackground(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Background"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapStrokeShape(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IBorderStroke.Shape"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapStroke(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IStroke.Stroke"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapStrokeThickness(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IStroke.StrokeThickness"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapStrokeLineCap(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IStroke.StrokeLineCap"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapStrokeLineJoin(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IStroke.StrokeLineJoin"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapStrokeDashPattern(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IStroke.StrokeDashPattern"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapStrokeDashOffset(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IStroke.StrokeDashOffset"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapStrokeMiterLimit(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IStroke.StrokeMiterLimit"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.BorderHandler.MapContent(Microsoft.Maui.Handlers.IBorderHandler,Microsoft.Maui.IBorderView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IContentView.Content"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="border">The associated <see cref="T:Microsoft.Maui.IBorderView"/> instance.</param>
        </member>
        <member name="T:Microsoft.Maui.Handlers.CheckBoxHandler">
            <summary>
            Represents the view handler for the abstract <see cref="T:Microsoft.Maui.ICheckBox"/> view and its platform-specific implementation.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/maui/user-interface/handlers/">Conceptual documentation on handlers</seealso>
        </member>
        <member name="M:Microsoft.Maui.Handlers.CheckBoxHandler.MapIsChecked(Microsoft.Maui.Handlers.ICheckBoxHandler,Microsoft.Maui.ICheckBox)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ICheckBox.IsChecked"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="check">The associated <see cref="T:Microsoft.Maui.ICheckBox"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.CheckBoxHandler.MapForeground(Microsoft.Maui.Handlers.ICheckBoxHandler,Microsoft.Maui.ICheckBox)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ICheckBox.Foreground"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="check">The associated <see cref="T:Microsoft.Maui.ICheckBox"/> instance.</param>
        </member>
        <member name="T:Microsoft.Maui.Handlers.ContentViewHandler">
            <summary>
            Represents the view handler for the abstract <see cref="T:Microsoft.Maui.IContentView"/> view and its platform-specific implementation.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/maui/user-interface/handlers/">Conceptual documentation on handlers</seealso>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ContentViewHandler.MapContent(Microsoft.Maui.Handlers.IContentViewHandler,Microsoft.Maui.IContentView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IContentView.Content"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="page">The associated <see cref="T:Microsoft.Maui.IContentView"/> instance.</param>
        </member>
        <member name="T:Microsoft.Maui.Handlers.DatePickerHandler">
            <summary>
            Represents the view handler for the abstract <see cref="T:Microsoft.Maui.IDatePicker"/> view and its platform-specific implementation.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/maui/user-interface/handlers/">Conceptual documentation on handlers</seealso>
        </member>
        <member name="M:Microsoft.Maui.Handlers.DatePickerHandler.MapFormat(Microsoft.Maui.Handlers.IDatePickerHandler,Microsoft.Maui.IDatePicker)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IDatePicker.Format"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="datePicker">The associated <see cref="T:Microsoft.Maui.IDatePicker"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.DatePickerHandler.MapDate(Microsoft.Maui.Handlers.IDatePickerHandler,Microsoft.Maui.IDatePicker)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IDatePicker.Date"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="datePicker">The associated <see cref="T:Microsoft.Maui.IDatePicker"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.DatePickerHandler.MapMinimumDate(Microsoft.Maui.Handlers.IDatePickerHandler,Microsoft.Maui.IDatePicker)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IDatePicker.MinimumDate"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="datePicker">The associated <see cref="T:Microsoft.Maui.IDatePicker"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.DatePickerHandler.MapMaximumDate(Microsoft.Maui.Handlers.IDatePickerHandler,Microsoft.Maui.IDatePicker)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IDatePicker.MaximumDate"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="datePicker">The associated <see cref="T:Microsoft.Maui.IDatePicker"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.DatePickerHandler.MapCharacterSpacing(Microsoft.Maui.Handlers.IDatePickerHandler,Microsoft.Maui.IDatePicker)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextStyle.CharacterSpacing"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="datePicker">The associated <see cref="T:Microsoft.Maui.IDatePicker"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.DatePickerHandler.MapFont(Microsoft.Maui.Handlers.IDatePickerHandler,Microsoft.Maui.IDatePicker)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextStyle.Font"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="datePicker">The associated <see cref="T:Microsoft.Maui.IDatePicker"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.DatePickerHandler.MapTextColor(Microsoft.Maui.Handlers.IDatePickerHandler,Microsoft.Maui.IDatePicker)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextStyle.TextColor"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="datePicker">The associated <see cref="T:Microsoft.Maui.IDatePicker"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.EditorHandler.MapIsTextPredictionEnabled(Microsoft.Maui.Handlers.IEditorHandler,Microsoft.Maui.IEditor)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextInput.IsTextPredictionEnabled"/> property to the platform-specific implementations.
            </summary>
            <param name="handler"> The associated handler.</param>
            <param name="editor"> The associated <see cref="T:Microsoft.Maui.IEditor"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.EditorHandler.MapIsSpellCheckEnabled(Microsoft.Maui.Handlers.IEditorHandler,Microsoft.Maui.IEditor)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextInput.IsSpellCheckEnabled"/> property to the platform-specific implementations.
            </summary>
            <param name="handler"> The associated handler.</param>
            <param name="editor"> The associated <see cref="T:Microsoft.Maui.IEditor"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.EntryHandler.MapIsTextPredictionEnabled(Microsoft.Maui.Handlers.IEntryHandler,Microsoft.Maui.IEntry)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextInput.IsTextPredictionEnabled"/> property to the platform-specific implementations.
            </summary>
            <param name="handler"> The associated handler.</param>
            <param name="entry"> The associated <see cref="T:Microsoft.Maui.IEntry"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.EntryHandler.MapIsSpellCheckEnabled(Microsoft.Maui.Handlers.IEntryHandler,Microsoft.Maui.IEntry)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextInput.IsSpellCheckEnabled"/> property to the platform-specific implementations.
            </summary>
            <param name="handler"> The associated handler.</param>
            <param name="entry"> The associated <see cref="T:Microsoft.Maui.IEntry"/> instance.</param>
        </member>
        <member name="T:Microsoft.Maui.Handlers.LayoutHandler">
            <summary>
            Represents the view handler for the abstract <see cref="T:Microsoft.Maui.ILayout"/> view and its platform-specific implementation.
            </summary>
            <seealso href="https://learn.microsoft.com/dotnet/maui/user-interface/handlers/">Conceptual documentation on handlers</seealso>
        </member>
        <member name="M:Microsoft.Maui.Handlers.LayoutHandler.MapBackground(Microsoft.Maui.ILayoutHandler,Microsoft.Maui.ILayout)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Background"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="layout">The associated <see cref="T:Microsoft.Maui.ILayout"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.LayoutHandler.MapClipsToBounds(Microsoft.Maui.ILayoutHandler,Microsoft.Maui.ILayout)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ILayout.ClipsToBounds"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="layout">The associated <see cref="T:Microsoft.Maui.ILayout"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.LayoutHandler.GetLayoutFlowDirection(Microsoft.Maui.FlowDirection)">
            <summary>
            Converts a FlowDirection to the appropriate FlowDirection for cross-platform layout 
            </summary>
            <param name="flowDirection"></param>
            <returns>The FlowDirection to assume for cross-platform layout</returns>
        </member>
        <member name="T:Microsoft.Maui.Handlers.LayoutHandlerUpdate">
            <summary>
            Communicates information from an ILayout about updates to an ILayoutHandler
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Handlers.LayoutHandlerUpdate.#ctor(System.Int32,Microsoft.Maui.IView)">
            <summary>
            Communicates information from an ILayout about updates to an ILayoutHandler
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Handlers.MenuBarItemHandlerUpdate">
            <summary>
            Communicates information from an IMenuBarItem about updates to an IMenuBarItemHandler
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Handlers.MenuBarItemHandlerUpdate.#ctor(System.Int32,Microsoft.Maui.IMenuElement)">
            <summary>
            Communicates information from an IMenuBarItem about updates to an IMenuBarItemHandler
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Handlers.MenuBarHandlerUpdate">
            <summary>
            Communicates information from an IMenuBar about updates to an IMenuBarHandler
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Handlers.MenuBarHandlerUpdate.#ctor(System.Int32,Microsoft.Maui.IMenuBarItem)">
            <summary>
            Communicates information from an IMenuBar about updates to an IMenuBarHandler
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Handlers.ContextFlyoutItemHandlerUpdate">
            <summary>
            Communicates information from an IMenuFlyout about updates to an IMenuFlyoutHandler
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ContextFlyoutItemHandlerUpdate.#ctor(System.Int32,Microsoft.Maui.IMenuElement)">
            <summary>
            Communicates information from an IMenuFlyout about updates to an IMenuFlyoutHandler
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Handlers.MenuFlyoutSubItemHandlerUpdate">
            <summary>
            Communicates information from an IMenuFlyoutSubItem about updates to an IMenuFlyoutSubItemHandler
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Handlers.MenuFlyoutSubItemHandlerUpdate.#ctor(System.Int32,Microsoft.Maui.IMenuElement)">
            <summary>
            Communicates information from an IMenuFlyoutSubItem about updates to an IMenuFlyoutSubItemHandler
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Handlers.SearchBarHandler.MapIsTextPredictionEnabled(Microsoft.Maui.IViewHandler,Microsoft.Maui.ISearchBar)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextInput.IsTextPredictionEnabled"/> property to the platform-specific implementations.
            </summary>
            <param name="handler"> The associated handler.</param>
            <param name="searchBar"> The associated <see cref="T:Microsoft.Maui.ISearchBar"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.SearchBarHandler.MapIsSpellCheckEnabled(Microsoft.Maui.IViewHandler,Microsoft.Maui.ISearchBar)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.ITextInput.IsSpellCheckEnabled"/> property to the platform-specific implementations.
            </summary>
            <param name="handler"> The associated handler.</param>
            <param name="searchBar"> The associated <see cref="T:Microsoft.Maui.ISearchBar"/> instance.</param>
        </member>
        <member name="T:Microsoft.Maui.Handlers.ViewHandler">
            <summary>
            Base class for handlers that manage views which implement <see cref="T:Microsoft.Maui.IView"/>.
            </summary>
            <remarks>Handlers map virtual views (.NET MAUI layer) to controls on each platform (iOS, Android, Windows, macOS, etc.), which are known as platform views.
            Handlers are also responsible for instantiating the underlying platform view, and mapping the cross-platform control API to the platform view API. </remarks>
        </member>
        <member name="F:Microsoft.Maui.Handlers.ViewHandler.ViewMapper">
            <summary>
            A dictionary that maps the virtual view properties to their platform view counterparts.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Handlers.ViewHandler.ViewCommandMapper">
            <summary>
            A dictionary that maps the virtual view commands to their platform view counterparts.
            </summary>
            <remarks>The concept or a command mapper is very similar to the property mapper with
            the addition that you can provide extra data in the form of arguments with the command mapper.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.#ctor(Microsoft.Maui.IPropertyMapper,Microsoft.Maui.CommandMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Handlers.ViewHandler"/> class.
            </summary>
            <param name="mapper">The default mapper to use for this handler.</param>
            <param name="commandMapper">The command mapper to use for this handler.</param>
        </member>
        <member name="P:Microsoft.Maui.Handlers.ViewHandler.HasContainer">
            <summary>
            Gets or sets a value that indicates whether the <see cref="P:Microsoft.Maui.Handlers.ViewHandler.PlatformView"/> is contained within a view.
            </summary>
            <remarks>When set to <see langword="true"/>, <see cref="M:Microsoft.Maui.Handlers.ViewHandler.SetupContainer"/> is called to setup the container view.
            When set to <see langword="false"/>, <see cref="M:Microsoft.Maui.Handlers.ViewHandler.RemoveContainer"/> is called to remove the current container view.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Handlers.ViewHandler.NeedsContainer">
            <summary>
            Gets a value that indicates whether or not the <see cref="P:Microsoft.Maui.Handlers.ViewHandler.VirtualView"/> needs a container view.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.SetupContainer">
            <summary>
            Constructs the <see cref="P:Microsoft.Maui.Handlers.ViewHandler.ContainerView"/> and adds <see cref="P:Microsoft.Maui.Handlers.ViewHandler.PlatformView"/> to a container.
            </summary>
            <remarks>This method is called when <see cref="P:Microsoft.Maui.Handlers.ViewHandler.HasContainer"/> is set to <see langword="true"/>.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.RemoveContainer">
            <summary>
            Deconstructs the <see cref="P:Microsoft.Maui.Handlers.ViewHandler.ContainerView"/> and removes <see cref="P:Microsoft.Maui.Handlers.ViewHandler.PlatformView"/> from its container. 
            </summary>
            <remarks>This method is called when <see cref="P:Microsoft.Maui.Handlers.ViewHandler.HasContainer"/> is set to <see langword="false"/>.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Handlers.ViewHandler.ContainerView">
            <summary>
            Gets the view that acts as a container for the <see cref="P:Microsoft.Maui.Handlers.ViewHandler.PlatformView"/>.
            </summary>
            <remarks>Note that this can be <see langword="null"/>. Especially when <see cref="P:Microsoft.Maui.Handlers.ViewHandler.HasContainer"/> is set to <see langword="false"/> this value might not be set.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Handlers.ViewHandler.PlatformView">
            <summary>
            Gets or sets the platform representation of the view associated to this handler.
            </summary>
            <remarks>This property holds the reference to platform layer view, e.g. the iOS/macOS, Android or Windows view.
            The abstract (.NET MAUI) view is found in <see cref="P:Microsoft.Maui.Handlers.ViewHandler.VirtualView"/>.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Handlers.ViewHandler.VirtualView">
            <summary>
            Gets or sets the .NET MAUI repesentation of the view associated to this handler.
            </summary>
            <remarks>This property holds the reference to the abstract (.NET MAUI) view.
            The platform view is found in <see cref="P:Microsoft.Maui.Handlers.ViewHandler.PlatformView"/>.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.GetDesiredSize(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.PlatformArrange(Microsoft.Maui.Graphics.Rect)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapWidth(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Width"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapHeight(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Height"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapMinimumHeight(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.MinimumHeight"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapMaximumHeight(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.MaximumHeight"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapMinimumWidth(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.MinimumWidth"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapMaximumWidth(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.MaximumWidth"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapIsEnabled(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.IsEnabled"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapVisibility(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Visibility"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapBackground(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Background"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapFlowDirection(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.FlowDirection"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapOpacity(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Opacity"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapAutomationId(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.AutomationId"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapClip(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Clip"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapShadow(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Shadow"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapSemantics(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Semantics"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapInvalidateMeasure(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView,System.Object)">
            <summary>
            Maps the abstract <see cref="M:Microsoft.Maui.IView.InvalidateMeasure"/> method to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
            <param name="args">The arguments passed associated to this event.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapContainerView(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IViewHandler.ContainerView"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapBorderView(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IBorder.Border"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapFrame(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView,System.Object)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.Frame"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
            <param name="args">The arguments passed associated to this event.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapZIndex(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView,System.Object)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.ZIndex"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
            <param name="args">The arguments passed associated to this event.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapFocus(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView,System.Object)">
            <summary>
            Maps the abstract <see cref="M:Microsoft.Maui.IView.Focus"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
            <param name="args">The arguments passed associated to this event.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapInputTransparent(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IView.InputTransparent"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapUnfocus(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView,System.Object)">
            <summary>
            Maps the abstract <see cref="M:Microsoft.Maui.IView.Unfocus"/> method to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
            <param name="args">The arguments passed associated to this event.</param>
        </member>
        <member name="M:Microsoft.Maui.Handlers.ViewHandler.MapToolTip(Microsoft.Maui.IViewHandler,Microsoft.Maui.IView)">
            <summary>
            Maps the abstract <see cref="P:Microsoft.Maui.IToolTipElement.ToolTip"/> property to the platform-specific implementations.
            </summary>
            <param name="handler">The associated handler.</param>
            <param name="view">The associated <see cref="T:Microsoft.Maui.IView"/> instance.</param>
        </member>
        <member name="T:Microsoft.Maui.IElementHandler">
            <summary>
            Defines the core behavior necessary to create a custom element handler.
            <seealso href="https://learn.microsoft.com/dotnet/maui/user-interface/handlers/"> Conceptual documentation on handlers</seealso>
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IElementHandler.SetMauiContext(Microsoft.Maui.IMauiContext)">
            <summary>  
            Sets the .NET MAUI context for the element handler.  
            </summary>  
            <param name="mauiContext">The .NET MAUI context to set.</param>  
        </member>
        <member name="M:Microsoft.Maui.IElementHandler.SetVirtualView(Microsoft.Maui.IElement)">
            <summary>  
            Sets the cross-platform virtual view associated with the handler.  
            </summary>  
            <param name="view">The element to handle.</param>  
        </member>
        <member name="M:Microsoft.Maui.IElementHandler.UpdateValue(System.String)">
            <summary>  
            Updates the value of the specified property on the handler.  
            </summary>  
            <param name="property">The name of the property to update.</param>  
        </member>
        <member name="M:Microsoft.Maui.IElementHandler.Invoke(System.String,System.Object)">
            <summary>  
            Invokes the specified command on the element with the given arguments.  
            </summary>  
            <param name="command">The name of the command to invoke.</param>  
            <param name="args">Optional arguments to pass to the command.</param>  
        </member>
        <member name="M:Microsoft.Maui.IElementHandler.DisconnectHandler">
            <summary>  
            Disconnects the element handler from the element for clean up.  
            </summary>  
        </member>
        <member name="P:Microsoft.Maui.IElementHandler.PlatformView">
            <summary>  
            Gets the platform-specific view object associated with the handler.  
            </summary>  
        </member>
        <member name="P:Microsoft.Maui.IElementHandler.VirtualView">
            <summary>  
            Gets the cross-platform virtual view associated with the handler.  
            </summary>  
        </member>
        <member name="P:Microsoft.Maui.IElementHandler.MauiContext">
            <summary>  
            Gets the .NET MAUI context associated with the element.  
            </summary>  
        </member>
        <member name="T:Microsoft.Maui.IViewHandler">
            <summary>
            Defines members that view handlers should implement to provide mapping virtual views to platform views.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IViewHandler.HasContainer">
            <summary>
            Gets or sets a value that indicates whether the <see cref="P:Microsoft.Maui.IElementHandler.PlatformView"/> is contained within a view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IViewHandler.ContainerView">
            <summary>
            Gets the container view for this view.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.IViewHandler.VirtualView">
            <summary>
            Gets the virtual view (.NET MAUI layer) that is managed by this handler.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.IViewHandler.GetDesiredSize(System.Double,System.Double)">
            <summary>
            Computes the actual size of a view based on the desired size and constraints. 
            </summary>
            <param name="widthConstraint">The constraint on the width of the view.</param>
            <param name="heightConstraint">The constraint on the height of the view.</param>
            <returns>The computed size for the view associated to this handler.</returns>
        </member>
        <member name="M:Microsoft.Maui.IViewHandler.PlatformArrange(Microsoft.Maui.Graphics.Rect)">
            <summary>
            Positions child elements and determines a size for a view.
            </summary>
            <param name="frame">The size that the parent determines for the child views.</param>
        </member>
        <member name="M:Microsoft.Maui.Hosting.FontCollectionExtensions.AddFont(Microsoft.Maui.Hosting.IFontCollection,System.String,System.String)">
            <summary>
            Adds the font specified in <paramref name="filename"/> to the <paramref name="fontCollection"/>, with an optional font alias specified in <paramref name="alias"/>.
            </summary>
            <param name="fontCollection">The collection to add the font to.</param>
            <param name="filename">The filename of the font to add, such as a True type format (TTF) or open type font (OTF) font file. Font files can be added to the 'Resources\Fonts' of a .NET MAUI project.</param>
            <param name="alias">An optional alias that can also be used to reference this font.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="filename"/> parameter is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="filename"/> parameter is empty or only whitespace.</exception>
        </member>
        <member name="M:Microsoft.Maui.Hosting.FontCollectionExtensions.AddEmbeddedResourceFont(Microsoft.Maui.Hosting.IFontCollection,System.Reflection.Assembly,System.String,System.String)">
            <summary>
            Adds the font specified in <paramref name="filename"/> from an embedded resource in <paramref name="assembly"/> to the <paramref name="fontCollection"/>, with an optional font alias specified in <paramref name="alias"/>.
            </summary>
            <param name="fontCollection">The collection to add the font to.</param>
            <param name="assembly">The assembly that contains the specified font as an embedded resource.</param>
            <param name="filename">The embedded resource filename of the font to add, such as a True type format (TTF) or open type font (OTF) font file.</param>
            <param name="alias">An optional alias that can also be used to reference this font.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="filename"/> parameter is <c>null</c>. -or- The <paramref name="assembly"/> parameter is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="filename"/> parameter is empty or only whitespace.</exception>
        </member>
        <member name="M:Microsoft.Maui.Hosting.FontsMauiAppBuilderExtensions.ConfigureFonts(Microsoft.Maui.Hosting.MauiAppBuilder)">
            <summary>
            Configures the <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/> with fonts.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/> to configure.</param>
            <returns>The configured <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.FontsMauiAppBuilderExtensions.ConfigureFonts(Microsoft.Maui.Hosting.MauiAppBuilder,System.Action{Microsoft.Maui.Hosting.IFontCollection})">
            <summary>
            Configures the <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/> with a specified delegate <paramref name="configureDelegate"/> to register fonts in the application.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/> to configure.</param>
            <param name="configureDelegate">A configuration delegate that can register fonts in the provided <see cref="T:Microsoft.Maui.Hosting.IFontCollection"/>.</param>
            <returns>The configured <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.Maui.Hosting.IFontCollection">
            <summary>
            A collection of fonts.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Hosting.ImageSourceServiceCollectionExtensions.AddService``2(Microsoft.Maui.Hosting.IImageSourceServiceCollection)">
            <summary>
            Registers an image service with the underlying service container via AddSingleton.
            </summary>
            <typeparam name="TImageSource">The image type to register for</typeparam>
            <typeparam name="TImageSourceService">The service type to register</typeparam>
            <param name="services">The service collection</param>
            <returns>The service collection</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.ImageSourceServiceCollectionExtensions.AddService``1(Microsoft.Maui.Hosting.IImageSourceServiceCollection,System.Func{System.IServiceProvider,Microsoft.Maui.IImageSourceService{``0}})">
            <summary>
            Registers an image service with the underlying service container via AddSingleton.
            </summary>
            <typeparam name="TImageSource">The image type to register for</typeparam>
            <param name="services">The service collection</param>
            <param name="implementationFactory">A factory method to create the service</param>
            <returns>The service collection</returns>
        </member>
        <member name="T:Microsoft.Maui.Hosting.MauiApp">
            <summary>
            A .NET MAUI application with registered services and configuration data.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Hosting.MauiApp.Services">
            <summary>
            The application's configured services.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Hosting.MauiApp.Configuration">
            <summary>
            The application's configured <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiApp.CreateBuilder(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/> class with optional defaults.
            </summary>
            <param name="useDefaults">Whether to create the <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/> with common defaults.</param>
            <returns>The <see cref="T:Microsoft.Maui.Hosting.MauiAppBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiApp.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiApp.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Maui.Hosting.MauiAppBuilder">
            <summary>
            A builder for .NET MAUI cross-platform applications and services.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Hosting.MauiAppBuilder.Services">
            <summary>
            A collection of services for the application to compose. This is useful for adding user provided or framework provided services.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Hosting.MauiAppBuilder.Configuration">
            <summary>
            A collection of configuration providers for the application to compose. This is useful for adding new configuration sources and providers.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Hosting.MauiAppBuilder.Logging">
            <summary>
            A collection of logging providers for the application to compose. This is useful for adding new logging providers.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiAppBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})">
            <summary>
            Registers a <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" /> instance to be used to create the <see cref="T:System.IServiceProvider" />.
            </summary>
            <param name="factory">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" />.</param>
            <param name="configure">
            A delegate used to configure the <typeparamref T="TBuilder" />. This can be used to configure services using
            APIS specific to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" /> implementation.
            </param>
            <typeparam name="TBuilder">The type of builder provided by the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" />.</typeparam>
            <remarks>
            <para>
            <see cref="M:Microsoft.Maui.Hosting.MauiAppBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})"/> is called by <see cref="M:Microsoft.Maui.Hosting.MauiAppBuilder.Build"/>
            and so the delegate provided by <paramref name="configure"/> will run after all other services have been registered.
            </para>
            <para>
            Multiple calls to <see cref="M:Microsoft.Maui.Hosting.MauiAppBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})"/> will replace
            the previously stored <paramref name="factory"/> and <paramref name="configure"/> delegate.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiAppBuilder.Build">
            <summary>
            Builds the <see cref="T:Microsoft.Maui.Hosting.MauiApp"/>.
            </summary>
            <returns>A configured <see cref="T:Microsoft.Maui.Hosting.MauiApp"/>.</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.AddHandler(Microsoft.Maui.Hosting.IMauiHandlersCollection,System.Type,System.Type)">
            <summary>
            Registers a handler with the underlying service container via AddTransient.
            </summary>
            <param name="handlersCollection">The element collection</param>
            <param name="viewType">The type of view to register</param>
            <param name="handlerType">The handler type that represents the element</param>
            <returns>The handler collection</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.AddHandler``2(Microsoft.Maui.Hosting.IMauiHandlersCollection)">
            <summary>
            Registers a handler with the underlying service container via AddTransient.
            </summary>
            <typeparam name="TType">The type of element to register</typeparam>
            <typeparam name="TTypeRender">The handler type that represents the element</typeparam>
            <param name="handlersCollection">The handler collection</param>
            <returns>The handler collection</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.AddHandler``1(Microsoft.Maui.Hosting.IMauiHandlersCollection,System.Func{System.IServiceProvider,Microsoft.Maui.IElementHandler})">
            <summary>
            Registers a handler with the underlying service container via AddTransient.
            </summary>
            <typeparam name="TType">The type of element to register</typeparam>
            <param name="handlersCollection">The handler collection</param>
            <param name="handlerImplementationFactory">A factory method to create the handler</param>
            <returns>The handler collection</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.TryAddHandler(Microsoft.Maui.Hosting.IMauiHandlersCollection,System.Type,System.Type)">
            <summary>
            Registers a handler with the underlying service container via AddTransient.
            </summary>
            <param name="handlersCollection">The handler collection</param>
            <param name="viewType">The type of element to register</param>
            <param name="handlerType">The handler type that represents the element</param>
            <returns>The handler collection</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.TryAddHandler``2(Microsoft.Maui.Hosting.IMauiHandlersCollection)">
            <summary>
            Registers a handler with the underlying service container via AddTransient.
            </summary>
            <typeparam name="TType">The type of element to register</typeparam>
            <typeparam name="TTypeRender">The handler type that represents the element</typeparam>
            <param name="handlersCollection">The handler collection</param>
            <returns>The handler collection</returns>
        </member>
        <member name="M:Microsoft.Maui.Hosting.MauiHandlersCollectionExtensions.TryAddHandler``1(Microsoft.Maui.Hosting.IMauiHandlersCollection,System.Func{System.IServiceProvider,Microsoft.Maui.IElementHandler})">
            <summary>
            Registers a handler with the underlying service container via AddTransient.
            </summary>
            <typeparam name="TType">The type of element to register</typeparam>
            <param name="handlersCollection">The handler collection</param>
            <param name="handlerImplementationFactory">A factory method to create the handler</param>
            <returns>The handler collection</returns>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.AlignContent">
            <summary>
            Values for <see cref="P:Microsoft.Maui.Controls.Flex.Item.AlignContent" />.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignContent.Stretch">
            <summary>
            Whether an item's should be stretched out.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignContent.Center">
            <summary>
            Whether an item should be packed around the center.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignContent.Start">
            <summary>
            Whether an item should be packed at the start.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignContent.End">
            <summary>
            Whether an item should be packed at the end.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignContent.SpaceBetween">
            <summary>
            Whether items should be distributed evenly, the first item being at the start and the last item being at the end.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignContent.SpaceAround">
            <summary>
            Whether items should be distributed evenly, the first and last items having a half-size space.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignContent.SpaceEvenly">
            <summary>
            Whether items should be distributed evenly, all items having equal space around them.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.AlignItems">
            <summary>
            Values for <see cref="P:Microsoft.Maui.Controls.Flex.Item.AlignItems" />.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignItems.Stretch">
            <summary>
            Whether an item's should be stretched out.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignItems.Center">
            <summary>
            Whether an item should be packed around the center.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignItems.Start">
            <summary>
            Whether an item should be packed at the start.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignItems.End">
            <summary>
            Whether an item should be packed at the end.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.AlignSelf">
            <summary>
            Values for <see cref="P:Microsoft.Maui.Controls.Flex.Item.AlignSelf" />.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignSelf.Auto">
            <summary>
            Whether an item should be packed according to the alignment value of its parent.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignSelf.Stretch">
            <summary>
            Whether an item's should be stretched out.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignSelf.Center">
            <summary>
            Whether an item should be packed around the center.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignSelf.Start">
            <summary>
            Whether an item should be packed at the start.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.AlignSelf.End">
            <summary>
            Whether an item should be packed at the end.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.Direction">
            <summary>
            Values for <see cref="P:Microsoft.Maui.Controls.Flex.Item.Direction" />.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Direction.Row">
            <summary>
            Whether items should be stacked horizontally.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Direction.RowReverse">
            <summary>
            Like Row but in reverse order.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Direction.Column">
            <summary>
            Whether items should be stacked vertically.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Direction.ColumnReverse">
            <summary>
            Like Column but in reverse order.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.Justify">
            <summary>
            Values for <see cref="P:Microsoft.Maui.Controls.Flex.Item.Justify" />.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Justify.Center">
            <summary>
            Whether an item should be packed around the center.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Justify.Start">
            <summary>
            Whether an item should be packed at the start.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Justify.End">
            <summary>
            Whether an item should be packed at the end.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Justify.SpaceBetween">
            <summary>
            Whether items should be distributed evenly, the first item being at the start and the last item being at the end.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Justify.SpaceAround">
            <summary>
            Whether items should be distributed evenly, the first and last items having a half-size space.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Justify.SpaceEvenly">
            <summary>
            Whether items should be distributed evenly, all items having equal space around them.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.Position">
            <summary>
            Values for <see cref="P:Microsoft.Maui.Controls.Flex.Item.Position" />.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Position.Relative">
            <summary>
            Whether the item's frame will be determined by the flex rules of the layout system.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Position.Absolute">
            <summary>
            Whether the item's frame will be determined by fixed position values (<see cref="P:Microsoft.Maui.Controls.Flex.Item.Left" />, <see cref="P:Microsoft.Maui.Controls.Flex.Item.Right" />, <see cref="P:Microsoft.Maui.Controls.Flex.Item.Top" /> and <see cref="P:Microsoft.Maui.Controls.Flex.Item.Bottom" />).
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.Wrap">
            <summary>
            Values for <see cref="P:Microsoft.Maui.Controls.Flex.Item.Wrap" />.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Wrap.NoWrap">
            <summary>
            Whether items are laid out in a single line.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Wrap.Wrap">
            <summary>
            Whether items are laid out in multiple lines if needed.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Wrap.WrapReverse">
            <summary>
            Like Wrap but in reverse order.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.Basis">
            <summary>
            Value for <see cref="P:Microsoft.Maui.Controls.Flex.Item.Basis" />.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Layouts.Flex.Basis.Auto">
            <summary>
            Auto basis.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Basis.IsRelative">
            <summary>
            Whether the basis length is relative to parent's size.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Basis.IsAuto">
            <summary>
            Whether the basis is auto.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Basis.Length">
            <summary>
            Gets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="M:Microsoft.Maui.Layouts.Flex.Basis.#ctor(System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.Flex.Basis"/> struct.
            </summary>
            <param name="length">Length.</param>
            <param name="isRelative">If set to <c>true</c> is relative.</param>
        </member>
        <member name="T:Microsoft.Maui.Layouts.Flex.Item">
            <summary>
            An item with flexbox properties. Items can also contain other items and be enumerated.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Frame">
            <summary>
            Gets the frame (x, y, w, h).
            </summary>
            <value>The frame.</value>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Parent">
            <summary>The parent item.</summary>
            <value>The parent item, or null if the item is a root item.</value>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.AlignContent">
            <summary>This property defines how the layout engine will distribute space between and around child items that have been laid out on multiple lines. This property is ignored if the root item does not have its <see cref="P:Microsoft.Maui.Controls.Flex.Item.Wrap" /> property set to Wrap or WrapReverse.</summary>
            <remarks>The default value for this property is Stretch.</remarks>
             <value>The content of the align.</value>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.AlignItems">
            <summary>This property defines how the layout engine will distribute space between and around child items along the cross-axis.</summary>
            <value>The align items.</value>
            <remarks>The default value for this property is Stretch.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.AlignSelf">
            <summary>This property defines how the layout engine will distribute space between and around child items for a specific child along the cross-axis. If this property is set to Auto on a child item, the parent's value for <see cref="P:Microsoft.Maui.Controls.Flex.Item.AlignItems" /> will be used instead.</summary>
            <value>The align self.</value>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Basis">
            <summary>This property defines the initial main-axis dimension of the item. If <see cref="P:Microsoft.Maui.Controls.Flex.Item.Direction" /> is row-based (horizontal), it will be used instead of <see cref="P:Microsoft.Maui.Controls.Flex.Item.Width" />, and if it's column-based (vertical), it will be used instead of <see cref="P:Microsoft.Maui.Controls.Flex.Item.Height" />.</summary>
            <value>The basis.</value>
            <remarks>The default value for this property is Auto.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Bottom">
            <summary>This property defines the bottom edge absolute position of the item. It also defines the item's height if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Top" /> is also set and if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Height" /> isn't set. It is ignored if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Position" /> isn't set to Absolute.</summary>
            <value>The value for the property.</value>
            <remarks>The default value for this property is NaN.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Direction">
            <summary>This property defines the direction and main-axis of child items. If set to Column (or ColumnReverse), the main-axis will be the y-axis and items will be stacked vertically. If set to Row (or RowReverse), the main-axis will be the x-axis and items will be stacked horizontally.</summary>
            <value>Any value part of the<see cref="T:Microsoft.Maui.Controls.Flex.Direction" /> enumeration.</value>
            <remarks>The default value for this property is Column.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Grow">
            <summary>This property defines the grow factor of the item; the amount of available space it should use on the main-axis. If this property is set to 0, the item will not grow.</summary>
            <value>The item grow factor.</value>
            <remarks>The default value for this property is 0 (does not take any available space).</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Height">
            <summary>This property defines the height size dimension of the item.</summary>
            <value>The height size dimension.</value>
            <remarks>The default value for this property is NaN.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.JustifyContent">
            <summary>This property defines how the layout engine will distribute space between and around child items along the main-axis.</summary>
            <value>Any value part of the<see cref="T:Microsoft.Maui.Controls.Flex.Align" /> enumeration, with the exception of Stretch and Auto.</value>
            <remarks>The default value for this property is Start.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Left">
            <summary>This property defines the left edge absolute position of the item.It also defines the item's width if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Right" /> is also set and if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Width" /> isn't set.It is ignored if <see cref = "P:Microsoft.Maui.Controls.Flex.Item.Position" /> isn't set to Absolute.</summary>
            <value>The value for the property.</value>
            <remarks>The default value for this property is NaN.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.MarginBottom">
            <summary>This property defines the margin space required on the bottom edge of the item.</summary>
            <value>The top edge margin space (negative values are allowed).</value>
            <remarks>The default value for this property is 0.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.MarginLeft">
            <summary>This property defines the margin space required on the left edge of the item.</summary>
            <value>The top edge margin space (negative values are allowed).</value>
            <remarks>The default value for this property is 0.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.MarginRight">
            <summary>This property defines the margin space required on the right edge of the item.</summary>
            <value>The top edge margin space (negative values are allowed).</value>
            <remarks>The default value for this property is 0.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.MarginTop">
            <summary>This property defines the margin space required on the top edge of the item.</summary>
            <value>The top edge margin space (negative values are allowed).</value>
            <remarks>The default value for this property is 0.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Order">
            <summary>This property specifies whether this item should be laid out before or after other items in the container.Items are laid out based on the ascending value of this property.Items that have the same value for this property will be laid out in the order they were inserted.</summary>
            <value>The item order (can be a negative, 0, or positive value).</value>
            <remarks>The default value for this property is 0.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.PaddingBottom">
            <summary>This property defines the height of the item's bottom edge padding space that should be used when laying out child items.</summary>
            <value>The bottom edge padding space.Negative values are not allowed.</value>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.PaddingLeft">
            <summary>This property defines the height of the item's left edge padding space that should be used when laying out child items.</summary>
            <value>The bottom edge padding space.Negative values are not allowed.</value>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.PaddingRight">
            <summary>This property defines the height of the item's right edge padding space that should be used when laying out child items.</summary>
            <value>The bottom edge padding space.Negative values are not allowed.</value>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.PaddingTop">
            <summary>This property defines the height of the item's top edge padding space that should be used when laying out child items.</summary>
            <value>The bottom edge padding space.Negative values are not allowed.</value>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Position">
            <summary>This property defines whether the item should be positioned by the flexbox rules of the layout engine(Relative) or have an absolute fixed position (Absolute). If this property is set to Absolute, the<see cref="P:Microsoft.Maui.Controls.Flex.Item.Left" />, <see cref = "P:Microsoft.Maui.Controls.Flex.Item.Right" />, <see cref = "P:Microsoft.Maui.Controls.Flex.Item.Top" /> and <see cref= "P:Microsoft.Maui.Controls.Flex.Item.Bottom" /> properties will then be used to determine the item's fixed position in its container.</summary>
            <value>Any value part of the<see cref="T:Microsoft.Maui.Controls.Flex.Position" /> enumeration.</value>
            <remarks>The default value for this property is Relative</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Right">
            <summary>This property defines the right edge absolute position of the item.It also defines the item's width if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Left" /> is also set and if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Width" /> isn't set.It is ignored if <see cref = "P:Microsoft.Maui.Controls.Flex.Item.Position" /> isn't set to Absolute.</summary>
            <value>The value for the property.</value>
            <remarks>The default value for this property is NaN.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Shrink">
            <summary>This property defines the shrink factor of the item.In case the child items overflow the main-axis of the container, this factor will be used to determine how individual items should shrink so that all items can fill inside the container.If this property is set to 0, the item will not shrink.</summary>
            <value>The item shrink factor.</value>
            <remarks>The default value for this property is 1 (all items will shrink equally).</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Top">
            <summary>This property defines the top edge absolute position of the item. It also defines the item's height if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Bottom" /> is also set and if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Height" /> isn't set. It is ignored if <see cref="P:Microsoft.Maui.Controls.Flex.Item.Position" /> isn't set to Absolute.</summary>
            <value>The value for the property.</value>
            <remarks>The default value for this property is NaN.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Width">
            <summary>This property defines the width size dimension of the item.</summary>
            <value>The width size dimension.</value>
            <remarks>The default value for this property is NaN.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Layouts.Flex.Item.Wrap">
            <summary>This property defines whether child items should be laid out in a single line(NoWrap) or multiple lines(Wrap or WrapReverse). If this property is set to Wrap or WrapReverse, <see cref = "P:Microsoft.Maui.Controls.Flex.Item.AlignContent" /> can then be used to specify how the lines should be distributed.</summary>
            <value>Any value part of the<see cref="T:Microsoft.Maui.Controls.Flex.Wrap" /> enumeration.</value>
            <remarks>The default value for this property is NoWrap.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Layouts.Flex.Item.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.Flex.Item"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Layouts.Flex.Item.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.Controls.Flex.Item"/> class.
            </summary>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="P:Microsoft.Maui.Layouts.GridLayoutManager.Cell.ColumnGridLengthType">
            <summary>
            A combination of all the measurement types in the columns this cell spans
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Layouts.GridLayoutManager.Cell.RowGridLengthType">
            <summary>
            A combination of all the measurement types in the rows this cell spans
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Layouts.GridLayoutManager.Definition.Size">
            <summary>
            The current size of this definition
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Layouts.GridLayoutManager.Definition.MinimumSize">
            <summary>
            The minimum size of this definition
            For absolute and auto definitions, this is the same as Size
            For star definitions, this is the minimum size which can contain the contents of the row/column
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Layouts.LayoutExtensions.ArrangeContentUnbounded(Microsoft.Maui.IContentView,Microsoft.Maui.Graphics.Rect)">
            <summary>
            Arranges content which can exceed the bounds of the IContentView.
            </summary>
            <remarks>
            Useful for arranging content where the IContentView provides a viewport to a portion of the content (e.g, 
            the content of an IScrollView).
            </remarks>
            <param name="contentView"></param>
            <param name="bounds"></param>
            <returns>The Size of the arranged content</returns>
        </member>
        <member name="T:Microsoft.Maui.Platform.IImageSourcePartSetter">
            <summary>
            This represents a object that knows what the desired image is and how to apply a loaded version
            of the image to a platform view.
            </summary>
            <remarks>
            If a handler has multiple image parts, then multiple <see cref="T:Microsoft.Maui.Platform.IImageSourcePartSetter"/>
            instances can be used for each image part.
            
            The handler should not implement this interface itself as is breaks re-use of
            mappers and/or handlers.
            </remarks>
        </member>
        <member name="P:Microsoft.Maui.Platform.IImageSourcePartSetter.Handler">
            <summary>
            Gets the <see cref="T:Microsoft.Maui.IElementHandler"/> which is doing the image loading.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Platform.IImageSourcePartSetter.ImageSourcePart">
            <summary>
            Gets the <see cref="T:Microsoft.Maui.IImageSourcePart"/> that is being loaded.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.Platform.IImageSourcePartSetter.SetImageSource(System.Object)">
            <summary>
            The platform-specific implementation that knows how to set the loaded image into a platform view.
            </summary>
            <param name="platformImage">The platform image to set.</param>
        </member>
        <member name="T:Microsoft.Maui.Platform.ViewExtensions">
            <summary>Extension methods for <see cref="T:Microsoft.Maui.Controls.View" />s, providing animatable scaling, rotation, and layout functions.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Aspect">
            <summary>Defines how an image is displayed.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Aspect.AspectFit">
            <summary>Scale the image to fit the view. Some parts may be left empty (letter boxing).</summary>
        </member>
        <member name="F:Microsoft.Maui.Aspect.AspectFill">
            <summary>Scale the image to fill the view. Some parts may be clipped in order to fill the view.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.Aspect.Fill">
            <summary>Scale the image so it exactly fills the view. Scaling may not be uniform in X and Y.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.ClearButtonVisibility">
            <summary>
            Enumerates values that influence clear button visibility behavior on input fields.
            Typically this is a button inside of the input field, near the end, which clears the input when pressed.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ClearButtonVisibility.Never">
            <summary>
            Never show a clear button.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ClearButtonVisibility.WhileEditing">
            <summary>
            Only show a clear button in the input field while the input field has focus and is being edited.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.CornerRadius">
            <summary>Contains methods and properties for specifying corner radiuses.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.CornerRadius.TopLeft">
            <summary>Gets the radius of the top left corner.</summary><value>The radius of the top left corner.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.CornerRadius.TopRight">
            <summary>Gets the radius of the top right corner.</summary><value>The radius of the top right corner.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.CornerRadius.BottomLeft">
            <summary>Gets the radius of the top left corner.</summary><value>The radius of the top left corner.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.CornerRadius.BottomRight">
            <summary>Gets the radius of the bottom right corner.</summary><value>The radius of the bottom right corner.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.CornerRadius.#ctor(System.Double)">
            <param name="uniformRadius">The radius for all four corners.</param><summary>Creates a new <see cref="T:Microsoft.Maui.CornerRadius" /> such that all four of its corners have the same radius.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <param name="topLeft">The radius of the top left corner.</param><param name="topRight">The radius of the top right corner.</param><param name="bottomLeft">The radius of the bottom left corner.</param><param name="bottomRight">The radius of the bottom right corner.</param><summary>Creates a new <see cref="T:Microsoft.Maui.CornerRadius" /> such that each of four of its corners have the specified radiuses.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.CornerRadius.Equals(System.Object)">
            <param name="obj">The object against which to compare.</param><summary>Compares this corner radius to another.</summary><returns>
          <see langword="true" /> if <paramref name="obj" /> has the same effective corner radius values. Otherwise, <see langword="false" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.CornerRadius.GetHashCode">
            <summary>Gets the hashcode for the corner radius.</summary><returns>The hashcode for the corner radius.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.CornerRadius.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)">
            <param name="topLeft">To be added.</param><param name="topRight">To be added.</param><param name="bottomLeft">To be added.</param><param name="bottomRight">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Primitives.LayoutAlignment">
            <summary>
            Determines the position and size of an <see cref="T:Microsoft.Maui.IView"/> when arranged in a parent element.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Primitives.LayoutAlignment.Fill">
            <summary>
            Fill the available space.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Primitives.LayoutAlignment.Start">
            <summary>
            Align with the leading edge of the available space, as determined by <see cref="T:Microsoft.Maui.FlowDirection"/>.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Primitives.LayoutAlignment.Center">
            <summary>
            Center in the available space.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.Primitives.LayoutAlignment.End">
            <summary>
            Align with the trailing edge of the available space, as determined by <see cref="T:Microsoft.Maui.FlowDirection"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.EvaluateJavaScriptAsyncRequest">
            <summary>
            Specifies JavasScript to be evaluated by a platform web view control
            </summary>
        </member>
        <member name="P:Microsoft.Maui.EvaluateJavaScriptAsyncRequest.Script">
            <summary>
            The JavaScript to be evaluated.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.EvaluateJavaScriptAsyncRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the EvaluateJavaScriptAsyncRequest class.
            </summary>
            <param name="script">The JavaScript to be evaluated.</param>
        </member>
        <member name="T:Microsoft.Maui.FlowDirection">
            <summary>Enumerates values that control the layout direction for views.</summary><remarks>
      <para>The following contains a few important points from <format type="text/html"><a href="https://learn.microsoft.com/dotnet/maui/fundamentals/localization#right-to-left-localization">Right-to-Left Localization</a></format>. Developers should consult that document for more information about limitations of right-to-left support, and for requirements to implement right-to-left support on various target platforms.</para>
      <para>The default value of <see cref="T:Microsoft.Maui.FlowDirection" /> for a visual element that has no parent is <see cref="F:Microsoft.Maui.FlowDirection.LeftToRight" />, even on platforms where <see cref="P:Microsoft.Maui.FlowDirection" /> is <see cref="F:Microsoft.Maui.FlowDirection.RightToLeft" />. Therefore, developers must deliberately opt in to right-to-left layout. Developers can choose right-to-left layout by setting the <see cref="P:Microsoft.Maui.Controls.VisualElement.FlowDirection" /> property of the root element to <see cref="F:Microsoft.Maui.FlowDirection.RightToLeft" /> to chosse right-to-left layout, or to <see cref="F:Microsoft.Maui.FlowDirection.MatchParent" /> to match the device layout.</para>
      <para>All <see cref="T:Microsoft.Maui.Controls.VisualElement" />s that have a parent default to <see cref="F:Microsoft.Maui.FlowDirection.MatchParent" />.</para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.FlowDirection.MatchParent">
            <summary>Indicates that the view's layout direction will match the parent view's layout direction.</summary>
        </member>
        <member name="F:Microsoft.Maui.FlowDirection.LeftToRight">
            <summary>Indicates that view will be laid out left to right. This is the default when the view has no parent.</summary>
        </member>
        <member name="F:Microsoft.Maui.FlowDirection.RightToLeft">
            <summary>Indicates that view will be laid out right to left.</summary>
        </member>
        <member name="T:Microsoft.Maui.FlyoutBehavior">
            <summary>Enumeration of modes for the root menu of a Shell application.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.FlyoutBehavior.Disabled">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.FlyoutBehavior.Flyout">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.FlyoutBehavior.Locked">
            <summary>To be added.</summary>
        </member>
        <member name="P:Microsoft.Maui.FocusRequest.IsFocused">
            <summary>
            Gets or sets a value indicating whether this request set or not the focus.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.Font">
            <summary>The font used to display text.</summary><remarks>The available fonts, and the matching between <see cref="T:Microsoft.Maui.Font" /> and real displayed fonts is device-dependent.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Font.Family">
            <summary>Gets the font family to which this font belongs.</summary><value>The font family to which this <see cref="T:Microsoft.Maui.Font" /> structure belongs.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Font.Size">
            <summary>Gets the size of the font.</summary><value>A <see langword="double" /> that indicates the size of the font.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Font.IsDefault">
            <summary>Gets a value that tells whether this font has no attributes, belongs to the default family, and has no attributes set.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Font.Default">
            <summary>Gets the default font for the device.</summary><value>The default font for the device.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Font.WithSize(System.Double)">
            <param name="size">The requested font size.</param><summary>Returns a new font structure with the size that was specified with <paramref name="size" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Font.OfSize(System.String,System.Double,Microsoft.Maui.FontWeight,Microsoft.Maui.FontSlant,System.Boolean)">
            <param name="name">The name of the targeted system font.</param><param name="size">The desired font size.</param><summary>Returns a <see cref="T:Microsoft.Maui.Font" /> structure with the requested font and size.</summary><returns>A <see cref="T:Microsoft.Maui.Font" /> instance.</returns><remarks>Font availability is platform- and device-dependent.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Font.SystemFontOfSize(System.Double,Microsoft.Maui.FontWeight,Microsoft.Maui.FontSlant,System.Boolean)">
            <param name="size">The desired font size.</param><summary>Returns an usable font instance representing the default font, in the requested size, for the device and platform.</summary><returns>The requested <see cref="T:Microsoft.Maui.Font" />.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Font.Equals(System.Object)">
            <param name="obj">The <see cref="T:System.Object" /> value to compare this font to.</param><summary>Determine if the provided <see cref="T:System.Object" /> is equivalent to the current Font.</summary><returns>
          <see langword="true" /> if the provided object is an equivalent font. <see langword="false" /> otherwise.</returns><remarks>Overridden.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Font.GetHashCode">
            <summary>Get the Hashcode for this <see cref="T:System.Object" />.</summary><returns>A signed 32-bit hash code.</returns><remarks>Overridden.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Font.ToString">
            <summary>Returns a string representation of this font structure.</summary><returns>A string representation of this <see cref="T:Microsoft.Maui.Font" /> structure.</returns><remarks>The <see cref="M:Microsoft.Maui.Font.ToString" /> method returns a string that contains a labeled, comma-separated list of the <see cref="P:Microsoft.Maui.Font.Family" />, <see cref="P:Microsoft.Maui.Font.Size" />, and <see cref="P:Microsoft.Maui.Controls.FontAttributes" /> properties.</remarks>
        </member>
        <member name="T:Microsoft.Maui.GestureStatus">
            <summary>Enumerates possible gesture states.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.GestureStatus.Started">
            <summary>The gesture started.</summary>
        </member>
        <member name="F:Microsoft.Maui.GestureStatus.Running">
            <summary>The gesture is still being recognized.</summary>
        </member>
        <member name="F:Microsoft.Maui.GestureStatus.Completed">
            <summary>The gesture completed.</summary>
        </member>
        <member name="F:Microsoft.Maui.GestureStatus.Canceled">
            <summary>The gesture was canceled.</summary>
        </member>
        <member name="T:Microsoft.Maui.GridLength">
            <summary>Used to define the size (width/height) of Grid ColumnDefinition and RowDefinition.</summary><remarks>
      <para>GridLength of type GridUnitType.Absolute represents exact size. The ones of type GridUnitType.Auto adapts for fitting the size of the elements in the grid column/row. GridLength of type GridUnitType.Star are used to split the available size in proportional buckets.</para>
      <para>This valuetype is readonly.</para>
    </remarks>
        </member>
        <member name="F:Microsoft.Maui.GridLength.Auto">
            <summary>A ready to reuse GridLength of GridUnitType.Auto.</summary><value>
        </value><remarks>Value has no meaning for GridLength of type GridUnitType.Auto.</remarks>
        </member>
        <member name="F:Microsoft.Maui.GridLength.Star">
            <summary>A ready to reuse GridLength of GridUnitType.Star with a Value of 1.</summary><value>
        </value><remarks>If a Value other than 1 is needed with GridUnitType.Star, then use the constructor GridLength (value, GridUnitType.Star).</remarks>
        </member>
        <member name="P:Microsoft.Maui.GridLength.Value">
            <summary>Gets the Value of the GridLength.</summary><value>The value in GridUnitType of the GridLength.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.GridLength.GridUnitType">
            <summary>Gets or sets the GridUnitType of the GridLength</summary><value>The GridUnitType of the GridLength</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.GridLength.IsAbsolute">
            <summary>Gets whether or not the GridUnitType of the GridLength is GridUnitType.Absolute.</summary><value>true if the GridUnitType of the GridLength is GridUnitType.Absolute</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.GridLength.IsAuto">
            <summary>Gets whether or not the GridUnitType of the GridLength is GridUnitType.Auto.</summary><value>true if the GridUnitType of the GridLength is GridUnitType.Auto</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.GridLength.IsStar">
            <summary>Gets a value that indicates whether the GridUnitType of the GridLength is GridUnitType.Star.</summary><value>true if the GridUnitType of the GridLength is GridUnitType.Star</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.GridLength.#ctor(System.Double)">
            <param name="value">The value of the new grid length.</param><summary>Initializes a new Absolute GridLength.</summary><remarks>This is striclty equivalent to new GridLength (value, GridUnitType.Absolute).</remarks>
        </member>
        <member name="M:Microsoft.Maui.GridLength.#ctor(System.Double,Microsoft.Maui.GridUnitType)">
            <param name="value">The size of the GridLength.</param><param name="type">The GridUnitType (Auto, Star, Absolute) of the GridLength.</param><summary>Initializes a new GridLength.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.GridLength.Equals(System.Object)">
            <param name="obj">A GridLength to compare to.</param><summary>Test the equality of this GridLength and another one.</summary><returns>true is the GridLength are equal. False otherwise.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.GridLength.GetHashCode">
            <summary>Returns a value that is used for efficient storage of this object in collections.</summary><returns>To be added.</returns><remarks>Overridden.</remarks>
        </member>
        <member name="M:Microsoft.Maui.GridLength.ToString">
            <summary>Returns the value and the grid unit type, separated by a ".".</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.GridUnitType">
            <summary>Enumerates values that control how the <see cref="P:Microsoft.Maui.GridLength.Value" /> property is interpreted for row and column definitions.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.GridUnitType.Absolute">
            <summary>Interpret the <see cref="P:Microsoft.Maui.GridLength.Value" /> property value as the number of device-specific units.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.GridUnitType.Star">
            <summary>Interpret the <see cref="P:Microsoft.Maui.GridLength.Value" /> property value as a proportional weight, to be laid out after rows and columns with <see cref="F:Microsoft.Maui.GridUnitType.Absolute" /> or <see cref="F:Microsoft.Maui.GridUnitType.Auto" /> are accounted for.</summary><remarks>After all the rows and columns of type <see cref="F:Microsoft.Maui.GridUnitType.Absolute" /> and <see cref="F:Microsoft.Maui.GridUnitType.Auto" /> are laid out, each of the corresponding remaining rows or columns, which are of type <see cref="F:Microsoft.Maui.GridUnitType.Star" />, receive a fraction of the remaining available space. This fraction is determined by dividing each row's or column's <see cref="P:Microsoft.Maui.GridLength.Value" /> property value by the sum of all the row or column <see cref="P:Microsoft.Maui.GridLength.Value" /> property values, correspondingly, including its own.</remarks>
        </member>
        <member name="F:Microsoft.Maui.GridUnitType.Auto">
            <summary>Ignore the <see cref="P:Microsoft.Maui.GridLength.Value" /> property value and choose a size that fits the children of the row or column.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.Keyboard">
            <summary>Default keyboard and base class for specialized keyboards, such as those for telephone numbers, email, and URLs.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Keyboard.Plain">
            <summary>Returns a new keyboard with None <see cref="T:Microsoft.Maui.KeyboardFlags" /> ".</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Keyboard.Chat">
            <summary>Gets an instance of type "ChatKeyboard".</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Keyboard.Default">
            <summary>Gets an instance of type "Keyboard".</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Keyboard.Email">
            <summary>Gets an instance of type "EmailKeyboard".</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Keyboard.Numeric">
            <summary>Gets an instance of type "NumericKeyboard".</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Keyboard.Telephone">
            <summary>Gets an instance of type "TelephoneKeyboard".</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Keyboard.Text">
            <summary>Gets an instance of type "TextKeyboard".</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Keyboard.Url">
            <summary>Gets an instance of type "UrlKeyboard".</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Keyboard.Create(Microsoft.Maui.KeyboardFlags)">
            <param name="flags">The flags that control the keyboard's appearance and behavior.</param><summary>Returns a new keyboard with the specified <see cref="T:Microsoft.Maui.KeyboardFlags" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.KeyboardAcceleratorModifiers">
            <summary>
            Enumerates modifier flags for keyboard accelerators. MacCatalyst modifiers AlphaShift and NumericPad are not currently supported. 
            </summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardAcceleratorModifiers.None">
            <summary>
            Indicates no modifier.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardAcceleratorModifiers.Shift">
            <summary>
            Indicates Shift modifier on both MacCatalyst and Windows.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardAcceleratorModifiers.Ctrl">
            <summary>
            Indicates Control modifier on both MacCatalyst and Windows.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardAcceleratorModifiers.Alt">
            <summary>
            Indicates Option modifier on MacCatalyst, Menu modifier on Windows.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardAcceleratorModifiers.Cmd">
            <summary>
            Indicates Command modifier on MacCatalyst only.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardAcceleratorModifiers.Windows">
            <summary>
            Indicates Windows modifier on Windows only.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.KeyboardFlags">
            <summary>Enumerates keyboard option flags that controls capitalization, spellcheck, and suggestion behavior.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.KeyboardFlags.None">
            <summary>Indicates that nothing will be automatically capitalized.</summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardFlags.CapitalizeSentence">
            <summary>Indicates that the first letters of the first words of each sentence will be automatically capitalized.</summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardFlags.Spellcheck">
            <summary>Perform spellcheck on text that the user enters.</summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardFlags.Suggestions">
            <summary>Offer suggested word completions on text that the user enters.</summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardFlags.CapitalizeWord">
            <summary>Indicates that the first letter of each word will be automatically capitalized.</summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardFlags.CapitalizeCharacter">
            <summary>Indicates that every character will be automatically capitalized.</summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardFlags.CapitalizeNone">
            <summary>Indicates that nothing will be automatically capitalized.</summary>
        </member>
        <member name="F:Microsoft.Maui.KeyboardFlags.All">
            <summary>Capitalize the first letter of the first words of sentences, perform spellcheck, and offer suggested word completions on text that the user enters.</summary>
        </member>
        <member name="T:Microsoft.Maui.LineBreakMode">
            <summary>
            Enumeration specifying various options for line breaking.
            </summary>
            <remarks>How lines are broken or text is truncated might be different depending on the platform.</remarks>
        </member>
        <member name="F:Microsoft.Maui.LineBreakMode.NoWrap">
            <summary>
            Do not wrap text.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.LineBreakMode.WordWrap">
            <summary>
            Wrap at word boundaries.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.LineBreakMode.CharacterWrap">
            <summary>
            Wrap at character boundaries.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.LineBreakMode.HeadTruncation">
            <summary>
            Truncate the head of text.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.LineBreakMode.TailTruncation">
            <summary>
            Truncate the tail of text.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.LineBreakMode.MiddleTruncation">
            <summary>
            Truncate the middle of text. This may be done, for example, by replacing it with an ellipsis.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.OpenSwipeItem">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.OpenSwipeItem.LeftItems">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.OpenSwipeItem.TopItems">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.OpenSwipeItem.RightItems">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.OpenSwipeItem.BottomItems">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.RetrievePlatformValueRequest`1">
            <summary>
            Specifies a request for the retrieval of a platform value.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.RetrievePlatformValueRequest`1.Result">
            <summary>
            The result of the retrieval operation.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.RetrievePlatformValueRequest`1.SetResult(`0)">
            <summary>
            Sets the result value of the retrieval operation.
            </summary>
            <param name="result">The result value to set on this request.</param>
            <exception cref="T:System.InvalidOperationException">The result has already been set.</exception>
        </member>
        <member name="M:Microsoft.Maui.RetrievePlatformValueRequest`1.TrySetResult(`0)">
            <summary>
            Attempts to set the result value of the retrieval operation.
            </summary>
            <param name="result">The result value to set on this request.</param>
            <returns>true if the operation was successful; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.Maui.ReturnType">
            <summary>
            Enumerates return button styles.
            Typically the operating system on-screen keyboard will visually style the return key based on this value.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ReturnType.Default">
            <summary>
            Indicates the default style on the platform.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ReturnType.Done">
            <summary>
            Indicates a "Done" button.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ReturnType.Go">
            <summary>
            Indicates a "Go" button.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ReturnType.Next">
            <summary>
            Indicates a "Next" button. 
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ReturnType.Search">
            <summary>
            Indicates a "Search" button.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ReturnType.Send">
            <summary>
            Indicates a "Send" button.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ScrollBarVisibility">
            <summary>Enumerates conditions under which scroll bars will be visible.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.ScrollBarVisibility.Default">
            <summary>
            The visibility of the scrollbar will be the default for the platform based on the content and orientation.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ScrollBarVisibility.Always">
            <summary>
            The scollbar will be visible, regardless of the content or orientation.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ScrollBarVisibility.Never">
            <summary>
            The scrollbar will not be visible, regardless of the content or orientation.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.ScrollOrientation">
            <summary>Enumeration specifying vertical or horizontal scrolling directions.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.ScrollOrientation.Vertical">
            <summary>
            The content scrolls vertically.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ScrollOrientation.Horizontal">
            <summary>
            The content scrolls horizontally.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ScrollOrientation.Both">
            <summary>
            The content can scroll both horizontally and vertically.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.ScrollOrientation.Neither">
            <summary>
            The content cannot scroll.
            </summary>
        </member>
        <member name="P:Microsoft.Maui.Semantics.HeadingLevel">
            <summary>
            WinUI: Sets the heading level of the element
            Other: Supports only one heading level, so setting this to 
            any level will enable it as a heading.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.SizeRequest">
            <summary>Struct that defines minimum and maximum <see cref="T:Microsoft.Maui.Graphics.Size" />s.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.SizeRequest.Request">
            <summary>The requested size.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.SizeRequest.Minimum">
            <summary>The minimum acceptable size.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.SizeRequest.#ctor(Microsoft.Maui.Graphics.Size,Microsoft.Maui.Graphics.Size)">
            <param name="request">The size of the request.</param><param name="minimum">The minimum size for the request.</param><summary>Creates a new <see cref="T:Microsoft.Maui.SizeRequest" /> object that requests at least the size <paramref name="minimum" />, but preferably the size <paramref name="request" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.SizeRequest.#ctor(Microsoft.Maui.Graphics.Size)">
            <param name="request">The size of the request.</param><summary>Creates a new <see cref="T:Microsoft.Maui.SizeRequest" /> with the specified <paramref name="request" /> size.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.SizeRequest.ToString">
            <summary>Returns a string representation of the size request.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.SwipeBehaviorOnInvoked">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.SwipeBehaviorOnInvoked.Auto">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.SwipeBehaviorOnInvoked.Close">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.SwipeBehaviorOnInvoked.RemainOpen">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.SwipeDirection">
            <summary>Enumerates swipe directions.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.SwipeDirection.Right">
            <summary>Indicates a rightward swipe.</summary>
        </member>
        <member name="F:Microsoft.Maui.SwipeDirection.Left">
            <summary>Indicates a leftward swipe.</summary>
        </member>
        <member name="F:Microsoft.Maui.SwipeDirection.Up">
            <summary>Indicates an upward swipe.</summary>
        </member>
        <member name="F:Microsoft.Maui.SwipeDirection.Down">
            <summary>Indicates a downward swipe.</summary>
        </member>
        <member name="T:Microsoft.Maui.SwipeMode">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.SwipeMode.Reveal">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.SwipeMode.Execute">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.TextAlignment">
            <summary>Enumerates values that control text alignment.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.TextAlignment.Start">
            <summary>Indicates that text will be aligned to the left or top of horizontally or vertically aligned text, respectively.</summary>
        </member>
        <member name="F:Microsoft.Maui.TextAlignment.Center">
            <summary>Indicates that text will be aligned in the middle of either horizontally or vertically aligned text.</summary>
        </member>
        <member name="F:Microsoft.Maui.TextAlignment.End">
            <summary>Indicates that text will be aligned to the right or bottom of horizontally or vertically aligned text, respectively.</summary>
        </member>
        <member name="T:Microsoft.Maui.TextDecorations">
            <summary>Flagging enumeration defining text decorations.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.TextDecorations.None">
            <summary>No text decoration.</summary>
        </member>
        <member name="F:Microsoft.Maui.TextDecorations.Underline">
            <summary>A text underline.</summary>
        </member>
        <member name="F:Microsoft.Maui.TextDecorations.Strikethrough">
            <summary>A single-line strikethrough.</summary>
        </member>
        <member name="T:Microsoft.Maui.TextTransform">
            <summary>
            Enumerates values that determine the text transformation on an element.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.TextTransform.None">
            <summary>
            No text transformation is applied.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.TextTransform.Default">
            <summary>
            The default text transformation is applied.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.TextTransform.Lowercase">
            <summary>
            The text will be transformed into lowercase.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.TextTransform.Uppercase">
            <summary>
            The text will be transformed into uppercase.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.TextType">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="F:Microsoft.Maui.TextType.Text">
            <summary>To be added.</summary>
        </member>
        <member name="F:Microsoft.Maui.TextType.Html">
            <summary>To be added.</summary>
        </member>
        <member name="T:Microsoft.Maui.Thickness">
            <summary>Struct defining thickness around the edges of a <see cref="T:Microsoft.Maui.Controls.Shapes.Rectangle" /> using doubles.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Thickness.Left">
            <summary>The thickness of the left side of a rectangle.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Thickness.Top">
            <summary>The thickness of the top of a rectangle.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Thickness.Right">
            <summary>The thickness of the right side of a rectangle.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Thickness.Bottom">
            <summary>The thickness of the bottom of a rectangle.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Thickness.HorizontalThickness">
            <summary>The sum of <see cref="P:Microsoft.Maui.Thickness.Left" /> and <see cref="P:Microsoft.Maui.Thickness.Right" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Thickness.VerticalThickness">
            <summary>The sum of <see cref="P:Microsoft.Maui.Thickness.Top" /> and <see cref="P:Microsoft.Maui.Thickness.Bottom" />.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.Thickness.IsEmpty">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Thickness.#ctor(System.Double)">
            <param name="uniformSize">The uniform size of all edges in the new thickness.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Thickness" /> object that represents a uniform thickness of size <paramref name="uniformSize" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Thickness.#ctor(System.Double,System.Double)">
            <param name="horizontalSize">The width of the left and right thicknesses.</param><param name="verticalSize">The height of the top and bottom thicknesses.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Thickness" /> object that has a horizontal thickness of <paramref name="horizontalSize" /> and a vertical thickness of <paramref name="verticalSize" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <param name="left">The width of the left thickness.</param><param name="top">The height of the top thickness.</param><param name="right">The width of the right thickness.</param><param name="bottom">The height of the bottom thickness.</param><summary>Creates a new <see cref="T:Microsoft.Maui.Thickness" /> object with thicknesses defined by <paramref name="left" />, <paramref name="top" />, <paramref name="right" />, and <paramref name="bottom" />.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Thickness.Equals(System.Object)">
            <param name="obj">A <see cref="T:Microsoft.Maui.Thickness" /> to be compared.</param><summary>Whether the <paramref name="obj" /> is a <see cref="T:Microsoft.Maui.Thickness" /> with equivalent values.</summary><returns>
          <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:Microsoft.Maui.Thickness" /> and has equivalent values.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Thickness.GetHashCode">
            <summary>A has value for this <see cref="T:Microsoft.Maui.Thickness" />.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.Thickness.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)">
            <param name="left">To be added.</param><param name="top">To be added.</param><param name="right">To be added.</param><param name="bottom">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.ToolTip.Content">
            <summary>
            ToolTip content.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.WebNavigationEvent">
            <summary>
            Contains values that indicate why a navigation event was raised.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.WebNavigationEvent.Back">
            <summary>
            Indicates that the navigation resulted from the user going back to a previous page in the navigation history.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.WebNavigationEvent.Forward">
            <summary>
            Indicates that the navigation resulted from the user going forward to a later page in the navigation history.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.WebNavigationEvent.NewPage">
            <summary>
            Indicates that the navigation was to a previously unvisited page, according to the navigation history.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.WebNavigationEvent.Refresh">
            <summary>
            Indicates that the navigation resulted from a page refresh.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.WebNavigationResult">
            <summary>
            Enumerates values that indicate the outcome of a web navigation.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.WebNavigationResult.Success">
            <summary>
            The navigation succeeded.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.WebNavigationResult.Cancel">
            <summary>
            The navigation was cancelled.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.WebNavigationResult.Timeout">
            <summary>
            The navigation timed out.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.WebNavigationResult.Failure">
            <summary>
            The navigation failed.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.PropertyMapperExtensions.ModifyMapping``2(Microsoft.Maui.IPropertyMapper{``0,``1},System.String,System.Action{``1,``0,System.Action{Microsoft.Maui.IElementHandler,Microsoft.Maui.IElement}})">
            <summary>
            Modify a property mapping in place.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="propertyMapper">The property mapper in which to change the mapping.</param>
            <param name="key">The name of the property.</param>
            <param name="method">The modified method to call when the property is updated.</param>
        </member>
        <member name="M:Microsoft.Maui.PropertyMapperExtensions.ModifyMapping``2(Microsoft.Maui.IPropertyMapper{Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler},System.String,System.Action{``1,``0,System.Action{Microsoft.Maui.IElementHandler,Microsoft.Maui.IElement}})">
            <summary>
            Modify a property mapping in place but call the previous mapping if the types do not match.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="propertyMapper">The property mapper in which to change the mapping.</param>
            <param name="key">The name of the property.</param>
            <param name="method">The modified method to call when the property is updated.</param>
        </member>
        <member name="M:Microsoft.Maui.PropertyMapperExtensions.ReplaceMapping``2(Microsoft.Maui.IPropertyMapper{Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler},System.String,System.Action{``1,``0})">
            <summary>
            Replace a property mapping in place but call the previous mapping if the types do not match.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="propertyMapper">The property mapper in which to change the mapping.</param>
            <param name="key">The name of the property.</param>
            <param name="method">The modified method to call when the property is updated.</param>
        </member>
        <member name="M:Microsoft.Maui.PropertyMapperExtensions.AppendToMapping``2(Microsoft.Maui.IPropertyMapper{``0,``1},System.String,System.Action{``1,``0})">
            <summary>
            Specify a method to be run after an existing property mapping.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="propertyMapper">The property mapper in which to change the mapping.</param>
            <param name="key">The name of the property.</param>
            <param name="method">The method to call after the existing mapping is finished.</param>
        </member>
        <member name="M:Microsoft.Maui.PropertyMapperExtensions.AppendToMapping``2(Microsoft.Maui.IPropertyMapper{Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler},System.String,System.Action{``1,``0})">
            <summary>
            Specify a method to be run after an existing property mapping but skip if the types do not match.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="propertyMapper">The property mapper in which to change the mapping.</param>
            <param name="key">The name of the property.</param>
            <param name="method">The method to call after the existing mapping is finished.</param>
        </member>
        <member name="M:Microsoft.Maui.PropertyMapperExtensions.PrependToMapping``2(Microsoft.Maui.IPropertyMapper{``0,``1},System.String,System.Action{``1,``0})">
            <summary>
            Specify a method to be run before an existing property mapping.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="propertyMapper">The property mapper in which to change the mapping.</param>
            <param name="key">The name of the property.</param>
            <param name="method">The method to call before the existing mapping begins.</param>
        </member>
        <member name="M:Microsoft.Maui.PropertyMapperExtensions.PrependToMapping``2(Microsoft.Maui.IPropertyMapper{Microsoft.Maui.IElement,Microsoft.Maui.IElementHandler},System.String,System.Action{``1,``0})">
            <summary>
            Specify a method to be run before an existing property mapping but skip if the types do not match.
            </summary>
            <typeparam name="TVirtualView">The cross-platform type.</typeparam>
            <typeparam name="TViewHandler">The handler type.</typeparam>
            <param name="propertyMapper">The property mapper in which to change the mapping.</param>
            <param name="key">The name of the property.</param>
            <param name="method">The method to call before the existing mapping begins.</param>
        </member>
        <member name="T:Microsoft.Maui.Crc64HashAlgorithm">
            <summary>
             CRC64 variant: crc-64-jones 64-bit
             * Poly: 0xad93d23594c935a9
             Changes beyond initial implementation:
             * Starting Value: ulong.MaxValue
             * XOR length in HashFinal()
            </summary>
        </member>
        <member name="T:Microsoft.Maui.SoftInputExtensions">
            <summary>
            Extension methods for interacting with a platform's Soft Input Pane
            </summary>
        </member>
        <member name="M:Microsoft.Maui.SoftInputExtensions.HideSoftInputAsync(Microsoft.Maui.ITextInput,System.Threading.CancellationToken)">
            <summary>
            If a soft input pane is currently showing, this will attempt to hide it.
            </summary>
            <param name="targetView"></param>
            <param name="token">Cancellation token</param>
            <returns>
            Returns <c>true</c> if the platform was able to hide the soft input pane.</returns>
        </member>
        <member name="M:Microsoft.Maui.SoftInputExtensions.ShowSoftInputAsync(Microsoft.Maui.ITextInput,System.Threading.CancellationToken)">
            <summary>
            If a soft input pane is currently hiding, this will attempt to show it.
            </summary>
            <param name="targetView"></param>
            <param name="token">Cancellation token</param>
            <returns>
            Returns <c>true</c> if the platform was able to show the soft input pane.</returns>
        </member>
        <member name="M:Microsoft.Maui.SoftInputExtensions.IsSoftInputShowing(Microsoft.Maui.ITextInput)">
            <summary>
            Checks to see if the platform is currently showing the soft input pane
            </summary>
            <param name="targetView"></param>
            <returns>
            Returns <c>true</c> if the soft input pane is currently showing.</returns>
        </member>
        <member name="T:Microsoft.Maui.AdornerModel.DpiHelper">
            <summary>
            DPI related utilities.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.AdornerModel.DpiHelper.RoundToPixel(System.Double,System.Double)">
            <summary>
            Rounds unit value to nearest pixel.
            </summary>
            <returns>
            Rounded value in units.
            </returns>
        </member>
        <member name="M:Microsoft.Maui.AdornerModel.DpiHelper.RoundToPixel(Microsoft.Maui.Graphics.Point,System.Double)">
            <summary>
            Rounds point X and Y coordinates to nearest pixel.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.AdornerModel.DpiHelper.RoundToPixel(Microsoft.Maui.Graphics.Rect,System.Double)">
            <summary>
            Rounds rectangle corner coordinates to nearest pixel.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.AdornerModel.Tolerances">
            <summary>
            Helper utilities to compare double values.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.VisualDiagnosticsBootstrapHelper">
            <summary>
            Enables C++ code to simulate ICLRRuntimeHost2::ExecuteAssembly on top of ICLRRuntimeHost2::CreateDelegate in .net core 2.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.RectangleAdorner">
            <summary>
            Rectangle Adorner.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.RectangleAdorner.#ctor(Microsoft.Maui.IView,System.Single,System.Nullable{Microsoft.Maui.Graphics.Point},Microsoft.Maui.Graphics.Color,Microsoft.Maui.Graphics.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.RectangleAdorner"/> class.
            </summary>
            <param name="view">An <see cref="T:Microsoft.Maui.IView"/> to create the adorner around.</param>
            <param name="density">Override density setting. Default: 1</param>
            <param name="offset">Offset point used for positioning drawable object. Default: null</param>
            <param name="fillColor">Canvas Fill Color.</param>
            <param name="strokeColor">Canvas Stroke Color.</param>
        </member>
        <member name="P:Microsoft.Maui.RectangleAdorner.Density">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.RectangleAdorner.VisualView">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.RectangleAdorner.Contains(Microsoft.Maui.Graphics.Point)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Maui.RectangleGridAdorner">
            <summary>
            Rectangle Grid Adorner.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.RectangleGridAdorner.#ctor(Microsoft.Maui.IView,System.Single,System.Nullable{Microsoft.Maui.Graphics.Point},Microsoft.Maui.Graphics.Color,Microsoft.Maui.Graphics.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.RectangleGridAdorner"/> class.
            </summary>
            <param name="view">An <see cref="T:Microsoft.Maui.IView"/> to create the Adorner around.</param>
            <param name="density">Override density setting. Default: 1</param>
            <param name="offset">Offset Point used for positioning drawable object. Default: null</param>
            <param name="fillColor">Canvas Fill Color.</param>
            <param name="strokeColor">Canvas Stroke Color.</param>
        </member>
        <member name="T:Microsoft.Maui.SourceInfo">
            <summary>
            The source info for a given object.
            Used for locating where a given object is created
            in a given project.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.SourceInfo.#ctor(System.Uri,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.SourceInfo"/> class.
            </summary>
            <param name="sourceUri">The location of the source file where the object was created.</param>
            <param name="lineNumber">The line number of the object.</param>
            <param name="linePosition">The line position of the object.</param>
        </member>
        <member name="M:Microsoft.Maui.SourceInfo.Deconstruct(System.Uri@,System.Int32@,System.Int32@)">
            <summary>
            Deconstructs a given <see cref="T:Microsoft.Maui.SourceInfo"/> back to its URI and line numbers.
            </summary>
            <param name="sourceUri">The location of the source file where the object was created.</param>
            <param name="lineNumber">The line number of the object.</param>
            <param name="linePosition">The line position of the object.</param>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnostics.RegisterSourceInfo(System.Object,System.Uri,System.Int32,System.Int32)">
            <param name="target">To be added.</param><param name="uri">To be added.</param><param name="lineNumber">To be added.</param><param name="linePosition">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnostics.GetSourceInfo(System.Object)">
            <param name="obj">To be added.</param><summary>To be added.</summary><returns>To be added.</returns><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.#ctor(Microsoft.Maui.IWindow)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.VisualDiagnosticsOverlay"/> class.
            </summary>
            <param name="window">The parent Window.</param>
        </member>
        <member name="P:Microsoft.Maui.VisualDiagnosticsOverlay.ScrollViews">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.VisualDiagnosticsOverlay.ScrollToElement">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.VisualDiagnosticsOverlay.EnableElementSelector">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.VisualDiagnosticsOverlay.Offset">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.AddAdorner(Microsoft.Maui.IAdorner,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.AddAdorner(Microsoft.Maui.IVisualTreeElement,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.RemoveAdorner(Microsoft.Maui.IAdorner)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.RemoveAdorners">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.RemoveAdorners(Microsoft.Maui.IVisualTreeElement)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.ScrollToView(Microsoft.Maui.IVisualTreeElement)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.AddWindowElement(Microsoft.Maui.IWindowOverlayElement)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.RemoveWindowElement(Microsoft.Maui.IWindowOverlayElement)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.RemoveWindowElements">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.AddScrollableElementHandler(Microsoft.Maui.IScrollView)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.VisualDiagnosticsOverlay.RemoveScrollableElementHandler">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.VisualTreeChangeEventArgs.ChildIndex">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="P:Microsoft.Maui.VisualTreeChangeEventArgs.ChangeType">
            <summary>To be added.</summary><value>To be added.</value><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.VisualTreeChangeType">
            <summary>
            The type of change applied to the Visual Tree.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.VisualTreeChangeType.Add">
            <summary>
            Add item to visual tree.
            </summary>
        </member>
        <member name="F:Microsoft.Maui.VisualTreeChangeType.Remove">
            <summary>
            Remove item from visual tree.
            </summary>
        </member>
        <member name="T:Microsoft.Maui.WeakEventManager">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.WeakEventManager.AddEventHandler``1(System.EventHandler{``0},System.String)">
            <param name="handler">To be added.</param><param name="eventName">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.WeakEventManager.HandleEvent(System.Object,System.Object,System.String)">
            <param name="sender">To be added.</param><param name="args">To be added.</param><param name="eventName">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.WeakEventManager.RemoveEventHandler``1(System.EventHandler{``0},System.String)">
            <param name="handler">To be added.</param><param name="eventName">To be added.</param><summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="M:Microsoft.Maui.WeakEventManager.Subscription.#ctor(System.WeakReference,System.Reflection.MethodInfo)">
            <summary>To be added.</summary><remarks>To be added.</remarks>
        </member>
        <member name="T:Microsoft.Maui.WeakList`1">
            <summary>
            A List type for holding WeakReference's
            It clears the underlying List based on a threshold of operations: Add() or GetEnumerator()
            </summary>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.#ctor(Microsoft.Maui.IWindow)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Maui.WindowOverlay"/> class.
            </summary>
            <param name="window">The parent Window.</param>
        </member>
        <member name="P:Microsoft.Maui.WindowOverlay.Window">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.WindowOverlay.WindowElements">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.WindowOverlay.IsPlatformViewInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.WindowOverlay.DisableUITouchEventPassthrough">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.WindowOverlay.EnableDrawableTouchHandling">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.WindowOverlay.IsVisible">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Maui.WindowOverlay.Density">
            <inheritdoc/>
        </member>
        <member name="E:Microsoft.Maui.WindowOverlay.Tapped">
            <summary>
            The event handler that is fired whenever the <see cref="T:Microsoft.Maui.WindowOverlay"/> is tapped.
            </summary>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.AddWindowElement(Microsoft.Maui.IWindowOverlayElement)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.RemoveWindowElement(Microsoft.Maui.IWindowOverlayElement)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.RemoveWindowElements">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.HandleUIChange">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.OnTappedInternal(Microsoft.Maui.Graphics.Point)">
            <summary>
            Handles <see cref="E:Microsoft.Maui.WindowOverlay.Tapped"/> event.
            </summary>
            <param name="point">Point where user has touched.</param>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.Invalidate">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.Initialize">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Maui.WindowOverlay.DeinitializePlatformDependencies">
            <summary>
            Deinitializes the native event hooks and handlers used to drive the overlay.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with a field or property member.</summary>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>Initializes the attribute with the list of field and property members.</summary>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values when returning with the specified return value condition.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>Initializes the attribute with the specified return value condition and a field or property member.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>Initializes the attribute with the specified return value condition and list of field and property members.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute">
             <summary>
             Indicates that certain members on a specified <see cref="T:System.Type"/> are accessed dynamically,
             for example through <see cref="N:System.Reflection"/>.
             </summary>
             <remarks>
             This allows tools to understand which members are being accessed during the execution
             of a program.
            
             This attribute is valid on members whose type is <see cref="T:System.Type"/> or <see cref="T:System.String"/>.
            
             When this attribute is applied to a location of type <see cref="T:System.String"/>, the assumption is
             that the string represents a fully qualified type name.
            
             When this attribute is applied to a class, interface, or struct, the members specified
             can be accessed dynamically on <see cref="T:System.Type"/> instances returned from calling
             <see cref="M:System.Object.GetType"/> on instances of that class, interface, or struct.
            
             If the attribute is applied to a method it's treated as a special case and it implies
             the attribute should be applied to the "this" parameter of the method. As such the attribute
             should only be used on instance methods of types assignable to System.Type (or string, but no methods
             will use it there).
             </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute"/> class
            with the specified member types.
            </summary>
            <param name="memberTypes">The types of members dynamically accessed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes"/> which specifies the type
            of members dynamically accessed.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes">
             <summary>
             Specifies the types of members that are dynamically accessed.
            
             This enumeration has a <see cref="T:System.FlagsAttribute"/> attribute that allows a
             bitwise combination of its member values.
             </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None">
            <summary>
            Specifies no members.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicParameterlessConstructor">
            <summary>
            Specifies the default, parameterless public constructor.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicConstructors">
            <summary>
            Specifies all public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicConstructors">
            <summary>
            Specifies all non-public constructors.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicMethods">
            <summary>
            Specifies all public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicMethods">
            <summary>
            Specifies all non-public methods.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicFields">
            <summary>
            Specifies all public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicFields">
            <summary>
            Specifies all non-public fields.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicNestedTypes">
            <summary>
            Specifies all public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicNestedTypes">
            <summary>
            Specifies all non-public nested types.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicProperties">
            <summary>
            Specifies all public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicProperties">
            <summary>
            Specifies all non-public properties.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.PublicEvents">
            <summary>
            Specifies all public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.NonPublicEvents">
            <summary>
            Specifies all non-public events.
            </summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All">
            <summary>
            Specifies all members.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute">
            <summary>
            States a dependency that one member has on another.
            </summary>
            <remarks>
            This can be used to inform tooling of a dependency that is otherwise not evident purely from
            metadata and IL, for example a member relied on via reflection.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute"/> class
            with the specified signature of a member on the same type as the consumer.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute"/> class
            with the specified signature of a member on a <see cref="T:System.Type"/>.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="type">The <see cref="T:System.Type"/> containing <paramref name="memberSignature"/>.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute"/> class
            with the specified signature of a member on a type in an assembly.
            </summary>
            <param name="memberSignature">The signature of the member depended on.</param>
            <param name="typeName">The full name of the type containing the specified member.</param>
            <param name="assemblyName">The assembly name of the type containing the specified member.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute"/> class
            with the specified types of members on a <see cref="T:System.Type"/>.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="type">The <see cref="T:System.Type"/> containing the specified members.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.#ctor(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute"/> class
            with the specified types of members on a type in an assembly.
            </summary>
            <param name="memberTypes">The types of members depended on.</param>
            <param name="typeName">The full name of the type containing the specified members.</param>
            <param name="assemblyName">The assembly name of the type containing the specified members.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature">
            <summary>
            Gets the signature of the member depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature"/> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes"/>
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None"/>, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes">
            <summary>
            Gets the <see cref="T:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes"/> which specifies the type
            of members depended on.
            </summary>
            <remarks>
            Either <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberSignature"/> must be a valid string or <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.MemberTypes"/>
            must not equal <see cref="F:System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.None"/>, but not both.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type">
            <summary>
            Gets the <see cref="T:System.Type"/> containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type"/> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName"/> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName">
            <summary>
            Gets the full name of the type containing the specified member.
            </summary>
            <remarks>
            If neither <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Type"/> nor <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName"/> are specified,
            the type of the consumer is assumed.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName">
            <summary>
            Gets the assembly name of the specified type.
            </summary>
            <remarks>
            <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.AssemblyName"/> is only valid when <see cref="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.TypeName"/> is specified.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute.Condition">
            <summary>
            Gets or sets the condition in which the dependency is applicable, e.g. "DEBUG".
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute">
            <summary>
            Indicates that the specified method requires dynamic access to code that is not referenced
            statically, for example through <see cref="N:System.Reflection"/>.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when removing unreferenced
            code from an application.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute"/> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of unreferenced code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of unreferenced code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requries unreferenced code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute">
            <summary>
            Suppresses reporting of a specific rule violation, allowing multiple suppressions on a
            single code artifact.
            </summary>
            <remarks>
            <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute"/> is different than
            <see cref="T:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"/> in that it doesn't have a
            <see cref="T:System.Diagnostics.ConditionalAttribute"/>. So it is always preserved in the compiled assembly.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute"/>
            class, specifying the category of the tool and the identifier for an analysis rule.
            </summary>
            <param name="category">The category for the attribute.</param>
            <param name="checkId">The identifier of the analysis rule the attribute applies to.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category">
            <summary>
            Gets the category identifying the classification of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category"/> property describes the tool or tool analysis category
            for which a message suppression attribute applies.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId">
            <summary>
            Gets the identifier of the analysis tool rule to be suppressed.
            </summary>
            <remarks>
            Concatenated together, the <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Category"/> and <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.CheckId"/>
            properties form a unique check identifier.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Scope">
            <summary>
            Gets or sets the scope of the code that is relevant for the attribute.
            </summary>
            <remarks>
            The Scope property is an optional argument that specifies the metadata scope for which
            the attribute is relevant.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target">
            <summary>
            Gets or sets a fully qualified path that represents the target of the attribute.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Target"/> property is an optional argument identifying the analysis target
            of the attribute. An example value is "System.IO.Stream.ctor():System.Void".
            Because it is fully qualified, it can be long, particularly for targets such as parameters.
            The analysis tool user interface should be capable of automatically formatting the parameter.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId">
            <summary>
            Gets or sets an optional argument expanding on exclusion criteria.
            </summary>
            <remarks>
            The <see cref="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.MessageId"/> property is an optional argument that specifies additional
            exclusion where the literal metadata target is not sufficiently precise. For example,
            the <see cref="T:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute"/> cannot be applied within a method,
            and it may be desirable to suppress a violation against a statement in the method that will
            give a rule violation, but not against all statements in the method.
            </remarks>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute.Justification">
            <summary>
            Gets or sets the justification for suppressing the code analysis message.
            </summary>
        </member>
        <member name="T:ThisAssembly">
            <summary>Provides access to the current assembly information.</summary>
        </member>
        <member name="T:ThisAssembly.Git">
            <summary>Provides access to the git information for the current assembly.</summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirty">
            <summary>IsDirty: true</summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirtyString">
            <summary>IsDirtyString: true</summary>
        </member>
        <member name="F:ThisAssembly.Git.RepositoryUrl">
            <summary>Repository URL: https://github.com/dotnet/maui</summary>
        </member>
        <member name="F:ThisAssembly.Git.Branch">
            <summary>Branch: 8.0.1xx</summary>
        </member>
        <member name="F:ThisAssembly.Git.Commit">
            <summary>Commit: 1ebb238ff3</summary>
        </member>
        <member name="F:ThisAssembly.Git.Sha">
            <summary>Sha: 1ebb238ff313b626fe40e33fb52bdf13697ede5c</summary>
        </member>
        <member name="F:ThisAssembly.Git.CommitDate">
            <summary>Commit date: 2023-11-07T20:09:06+00:00</summary>
        </member>
        <member name="F:ThisAssembly.Git.Commits">
            <summary>Commits on top of base version: 2</summary>
        </member>
        <member name="F:ThisAssembly.Git.Tag">
            <summary>Tag: </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseTag">
            <summary>Base tag: </summary>
        </member>
        <member name="T:ThisAssembly.Git.BaseVersion">
            <summary>Provides access to the base version information used to determine the <see cref="T:ThisAssembly.Git.SemVer" />.</summary>      
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Major">
            <summary>Major: 8</summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Minor">
            <summary>Minor: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Patch">
            <summary>Patch: 1</summary>
        </member>
        <member name="T:ThisAssembly.Git.SemVer">
            <summary>Provides access to SemVer information for the current assembly.</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Major">
            <summary>Major: 8</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Minor">
            <summary>Minor: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Patch">
            <summary>Patch: 3</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Label">
            <summary>Label: </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.DashLabel">
            <summary>Label with dash prefix: </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Source">
            <summary>Source: File</summary>
        </member>
    </members>
</doc>
